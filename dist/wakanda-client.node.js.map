{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 19fc7affaff96c3b63f4","webpack:///./src/entry.node.ts","webpack:///./src/wakanda-client.ts","webpack:///./src/business/catalog-business.ts","webpack:///./src/business/abstract-business.ts","webpack:///./src/data-access/service/catalog-service.ts","webpack:///./src/data-access/service/abstract-service.ts","webpack:///./src/presentation/catalog.ts","webpack:///./src/presentation/dataclass.ts","webpack:///./src/business/dataclass-business.ts","webpack:///./src/business/entity-business.ts","webpack:///./src/data-access/service/entity-service.ts","webpack:///./src/data-access/util.ts","webpack:///./src/presentation/entity.ts","webpack:///./src/business/method-adapter.ts","webpack:///./src/data-access/service/dataclass-service.ts","webpack:///./src/business/collection-business.ts","webpack:///./src/data-access/service/collection-service.ts","webpack:///./src/const.ts","webpack:///./src/business/media-business.ts","webpack:///./src/data-access/service/media-service.ts","webpack:///./src/presentation/collection.ts","webpack:///./src/presentation/media.ts","webpack:///./src/business/directory-business.ts","webpack:///./src/data-access/service/directory-service.ts","webpack:///./src/data-access/http/node-http-client.ts","webpack:///external \"request\"","webpack:///./src/data-access/http/http-client.ts","webpack:///./src/data-access/http/http-response.ts"],"names":[],"mappings":"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","file":"wakanda-client.node.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"request\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"request\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WakandaClient\"] = factory(require(\"request\"));\n\telse\n\t\troot[\"WakandaClient\"] = factory(root[\"request\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_26__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 19fc7affaff96c3b63f4\n **/","import WakandaClient from './wakanda-client';\nimport NodeHttpClient from './data-access/http/node-http-client';\n\nWakandaClient.HttpClient = NodeHttpClient;\n\nexport = WakandaClient;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/entry.node.ts\n **/","import CatalogBusiness from './business/catalog-business';\nimport DirectoryBusiness from './business/directory-business';\nimport Entity from './presentation/entity';\nimport Collection from './presentation/collection';\nimport HttpClient from './data-access/http/http-client';\nimport Catalog from './presentation/catalog';\nimport BrowserHttpClient from './data-access/http/browser-http-client';\nimport NodeHttpClient from './data-access/http/node-http-client';\n\nexport interface Directory {\n  login(username: string, password: string, duration?: number): Promise<boolean>;\n  logout(): Promise<boolean>;\n  currentUser(): Promise<any>;\n  currentUserBelongsTo(groupName: string): Promise<boolean>;\n}\n\nexport interface Helper {\n  isEntity(object: any): boolean;\n  isCollection(object: any): boolean;\n}\n\nclass WakandaClient {\n  \n  public static HttpClient: typeof BrowserHttpClient|typeof NodeHttpClient;\n  \n  public _httpClient: HttpClient;\n  public directory: Directory;\n  public helper: Helper;\n  \n  constructor(host?: string) {\n    this._httpClient = new WakandaClient.HttpClient({\n      apiPrefix: (host || '') + '/rest'\n    });\n\n    let directoryBusiness = new DirectoryBusiness({\n      wakJSC: this\n    });\n\n    this.directory = {\n      login: (username, password, duration) => {\n        return directoryBusiness.login(username, password, duration);\n      },\n      logout: () => {\n        return directoryBusiness.logout();\n      },\n      currentUser: () => {\n        return directoryBusiness.currentUser();\n      },\n      currentUserBelongsTo: (group) => {\n        return directoryBusiness.currentUserBelongsTo(group);\n      }\n    };\n\n    this.helper = {\n      isEntity: object => {\n        return object instanceof Entity;\n      },\n      isCollection: object => {\n        return object instanceof Collection;\n      }\n    };\n  }\n\n  getCatalog(dataClasses?: string[]): Promise<Catalog> {\n    let catalogBusiness = new CatalogBusiness({\n      wakJSC: this\n    });\n\n    return catalogBusiness.get(dataClasses);\n  }\n\n  version(): string {\n    return '0.2.0';\n  }\n}\n\nexport default WakandaClient;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/wakanda-client.ts\n **/","import AbstractBusiness from './abstract-business';\nimport CatalogService from '../data-access/service/catalog-service';\nimport Catalog from '../presentation/catalog';\nimport {DataClass, Attribute, AttributeRelated, AttributeCollection} from '../presentation/dataclass';\nimport DataClassBusiness from './dataclass-business';\n\nexport interface DataClassDBO {\n  name: string;\n  collectionName: string;\n  attributes: {\n    name: string,\n    type: string,\n    kind: string,\n    readOnly: boolean\n  }[];\n  methods: {\n    name: string,\n    applyTo: string\n  }[];\n}\n\nclass CatalogBusiness extends AbstractBusiness {\n  \n  private service: CatalogService;\n  private seenDataClasses: string[];\n  \n  constructor(obj: any) {\n    super(obj);\n\n    this.service = new CatalogService({\n      wakJSC: this.wakJSC\n    });\n  }\n\n  private needDataClass(dcName: string) {\n    if (this.seenDataClasses.indexOf(dcName) === -1) {\n      this.seenDataClasses.push(dcName);\n    }\n  }\n\n  public get(dataClasses?: string[]): Promise<Catalog> {\n    \n    this.seenDataClasses = [];\n    \n    return this.service.get(dataClasses).then((dataClassDBOArray: DataClassDBO[]) => {\n\n      let dcArray: DataClass[] = [];\n\n      for (let dcDBO of dataClassDBOArray) {\n        let attributes: Attribute[] = [];\n\n        for(let attr of dcDBO.attributes) {\n          switch (attr.kind) {\n            case 'relatedEntity':\n              attributes.push(new AttributeRelated({\n                name: attr.name,\n                type: attr.type,\n                kind: attr.kind\n              }));\n              this.needDataClass(attr.type);\n              break;\n            case 'storage':\n            case 'calculated':\n            case 'alias':\n              let readOnly = attr.readOnly || (attr.type === 'image' || attr.type === 'blob');\n              attributes.push(new Attribute({\n                name: attr.name,\n                type: attr.type,\n                readOnly,\n                kind: attr.kind\n              }));\n              break;\n            case 'relatedEntities':\n            let attrCollection = new AttributeCollection({\n                name: attr.name,\n                type: attr.type,\n                kind: attr.kind\n              });\n              attributes.push(attrCollection);\n              this.needDataClass(attrCollection.entityType);\n              break;\n            default:\n              throw new Error('[WakandaClient] Unhandled ' + attr.kind + ' attribute type');\n          }\n        }\n\n        let methods: {\n          entity: string[],\n          collection: string[],\n          dataClass: string[]\n        } = {\n          entity: [],\n          collection: [],\n          dataClass: []\n        };\n\n        for (let method of dcDBO.methods) {\n          switch(method.applyTo) {\n            case 'entity':\n              methods.entity.push(method.name);\n              break;\n            case 'entityCollection':\n              methods.collection.push(method.name);\n              break;\n            case 'dataClass':\n              methods.dataClass.push(method.name);\n              break;\n            default:\n              throw new Error('[WakandaClient] Unrecognized method type');\n          }\n        }\n\n        let dataClass = new DataClass({\n          name: dcDBO.name,\n          collectionName: dcDBO.collectionName,\n          attributes,\n          methods\n        });\n\n        //Binding framework methods to the dataclass\n        let dataClassBusiness = new DataClassBusiness({\n          wakJSC: this.wakJSC,\n          dataClass,\n          methods\n        });\n        dataClassBusiness._decorateDataClass();\n\n        dcArray.push(dataClass);\n      }\n      \n      let catalog = new Catalog({\n        dataClasses: dcArray\n      });\n      \n      //Check if we have all needed dataClasses on the catalog\n      for (let dcName of this.seenDataClasses) {\n        if (!catalog[dcName]) {\n          throw new Error('Needed ' + dcName + ' dataClass is not present on catalog');\n        }\n      }\n\n      return catalog;\n    });\n  }\n}\n\nexport default CatalogBusiness;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/business/catalog-business.ts\n **/","import WakandaClient from '../wakanda-client';\n\nabstract class AbstractBusiness {\n  \n  public wakJSC: WakandaClient;\n  \n  constructor({wakJSC}: {wakJSC: WakandaClient}) {\n    this.wakJSC = wakJSC;\n  }\n}\n\nexport default AbstractBusiness;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/business/abstract-business.ts\n **/","import AbstractService from './abstract-service';\nimport {DataClassDBO} from '../../business/catalog-business';\n\nclass CatalogService extends AbstractService {\n  \n  get(dataClasses?: string| string[]): Promise<DataClassDBO[]> {\n    \n    var strDataclasses = '/';\n    \n    if (Array.isArray(dataClasses)) {\n      strDataclasses += dataClasses.join();\n    }\n    else if (typeof dataClasses === 'undefined') {\n      strDataclasses += '$all';\n    }\n    else {\n      throw new Error('Catalog.get: first parameter should be an array');\n    }\n\n    return this.httpClient.get({uri: '/$catalog' + strDataclasses})\n      .then(res => {\n        let catalog: DataClassDBO[] = [];\n        let rawObj = JSON.parse(res.body);\n\n        for (let d of rawObj.dataClasses) {\n\n          let attributes: any[] = [];\n          if (d.attributes) { //Seriously? :)\n            for (let attr of d.attributes) {\n              attributes.push({\n                name: attr.name,\n                kind: attr.kind,\n                type: attr.type,\n                readOnly: attr.readOnly\n              });\n            }\n          }\n\n          let methods: any[] = [];\n          if (d.methods) {\n            for (let m of d.methods) {\n              methods.push({\n                name: m.name,\n                applyTo: m.applyTo\n              });\n            }\n          }\n\n          catalog.push({\n            name: d.name,\n            collectionName: d.collectionName,\n            attributes,\n            methods\n          });\n        }\n\n        return catalog;\n      });\n  }\n}\n\nexport default CatalogService;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/data-access/service/catalog-service.ts\n **/","import WakandaClient from '../../wakanda-client';\nimport HttpClient from '../http/http-client';\n\nabstract class AbstractService {\n  \n  protected httpClient: HttpClient;\n  protected wakJSC: WakandaClient;\n  \n  constructor({wakJSC}: {wakJSC: WakandaClient}) {\n    this.wakJSC = wakJSC;\n    this.httpClient = wakJSC._httpClient;\n  }\n}\n\nexport default AbstractService;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/data-access/service/abstract-service.ts\n **/","import {DataClass} from './dataclass';\n\nclass Catalog {\n  \n  [key: string]: DataClass;\n  \n  constructor({dataClasses}) {\n    for (let dc of dataClasses) {\n      this[dc.name] = dc;\n    }\n  }\n}\n\nexport default Catalog;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/presentation/catalog.ts\n **/","import Entity from './entity';\nimport Collection from './collection';\nimport {QueryOption} from './query-option';\n\nexport class DataClass {\n  \n  public name: string;\n  public collectionName: string;\n  public attributes: Attribute[];\n  public methods: {\n    entity: string[],\n    collection: string[],\n    dataClass: string[]\n  };\n  \n  public find: (id: string|number, options?: QueryOption) => Promise<Entity>;\n  public query: (options?: QueryOption) => Promise<Collection>;\n  public create: (pojo?: any) => Entity;\n  \n  [key: string]: any;\n  \n  constructor({name, collectionName, attributes, methods}:\n    {name: string, collectionName: string, attributes: Attribute[], methods: {entity: string[], collection: string[], dataClass: string[]}}) {\n      \n    this.name = name;\n    this.collectionName = collectionName;\n    this.attributes = attributes;\n    this.methods = methods;\n  }\n}\n\nexport class Attribute {\n  \n  public name: string;\n  public type: string;\n  public readOnly: boolean;\n  public kind: string;\n  \n  constructor({name, type, readOnly, kind}:\n   {name: string, type: string, readOnly?: boolean, kind: string}) {\n     \n    this.name = name;\n    this.type = type;\n    this.readOnly = readOnly === true;\n    this.kind = kind;\n  }\n}\n\nexport class AttributeRelated extends Attribute {\n\n}\n\nexport class AttributeCollection extends Attribute {\n  \n  public entityType: string;\n  \n  constructor({name, type, readOnly, kind}:\n    {name: string, type: string, readOnly?: boolean, kind: string}) {\n      \n    super({name, type, readOnly, kind});\n    this.entityType = type.substring(0, type.length - 10);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/presentation/dataclass.ts\n **/","import AbstractBusiness from './abstract-business';\nimport EntityBusiness from './entity-business';\nimport DataClassService from '../data-access/service/dataclass-service';\nimport CollectionBusiness from './collection-business';\nimport MediaBusiness from './media-business';\nimport Entity from '../presentation/entity';\nimport Collection from '../presentation/collection';\nimport {AttributeRelated, AttributeCollection} from '../presentation/dataclass';\nimport Media from '../presentation/media';\nimport Const from '../const';\nimport {CollectionDBO} from './collection-business';\nimport {DataClass} from '../presentation/dataclass';\nimport {QueryOption} from '../presentation/query-option';\nimport {EntityDBO} from './entity-business';\nimport {MethodAdapter} from './method-adapter';\n\n//This map stores all DataClassBusiness instances of existing dataClasses\nlet _dataClassBusinessMap = new Map<string, DataClassBusiness>();\n\nclass DataClassBusiness extends AbstractBusiness {\n  \n  private dataClass: DataClass;\n  public methods: {\n          entity: string[],\n          collection: string[],\n          dataClass: string[]\n  };\n  private service: DataClassService;\n  public _dataClassBusinessMap: Map<string, DataClassBusiness>;\n  \n  constructor({wakJSC, dataClass, methods}) {\n    super({wakJSC});\n\n    this.dataClass = dataClass;\n    this.methods = methods;\n    this.service = new DataClassService({\n      wakJSC: this.wakJSC,\n      dataClass\n    });\n\n    _dataClassBusinessMap.set(dataClass.name, this);\n    this._dataClassBusinessMap = _dataClassBusinessMap;\n  }\n\n  _decorateDataClass() {\n    //Do not forget to bind(this) to have \"this\" pointing on business instance\n    //instead of given dataclass instance\n    this.dataClass.find    = this.find.bind(this);\n    this.dataClass.query   = this.query.bind(this);\n    this.dataClass.create  = this.create.bind(this);\n\n    this._addUserDefinedMethods();\n  }\n\n  _addUserDefinedMethods() {\n    let _this_ = this;\n    \n    this.methods.dataClass.forEach(method => {\n      //Voluntary don't use fat arrow notation to use arguments object without a bug\n      this.dataClass[method] = function() {\n        let params = Array.from(arguments);\n        return _this_.callMethod(method, params);\n      };\n    });\n  }\n\n  callMethod(methodName: string, parameters: any[]): Promise<Entity|Collection|any> {\n    return this.service.callMethod(methodName, parameters)\n      .then(obj => {\n        return MethodAdapter.transform(obj, this._dataClassBusinessMap);\n      });\n  }\n\n  find(id: string|number, options?: QueryOption): Promise<Entity> {\n    let opt = options || {};\n    \n    if (opt.filter !== undefined || opt.params !== undefined || opt.pageSize !== undefined ||\n      opt.start !== undefined || opt.orderBy !== undefined) {\n      throw new Error('Dataclass.find: options filter, params, pageSize, start and orderBy are not allowed');\n    }\n\n    return this.service.find(id, opt).then(entity => {\n      return this._presentationEntityFromDbo({\n        dbo: entity\n      });\n    });\n  }\n\n  query(options?: QueryOption): Promise<Collection> {\n    let opt = options || {};\n    let initialSelect = opt.select;\n    \n    if (opt.method && opt.method.length > 0) {\n      throw new Error('Dataclass.query: option method is not allowed');\n    }\n\n    if (!opt.pageSize) {\n      opt.pageSize = Const.DEFAULT_PAGE_SIZE;\n    }\n\n    return this.service.query(opt).then(collection => {\n      return this._presentationCollectionFromDbo({\n        dbo: collection,\n        pageSize: opt.pageSize,\n        initialSelect\n      });\n    });\n  }\n\n  create(pojo?: any): Entity {\n    var entityToAttach: any = {};\n    \n    if (pojo) {\n      for (let prop in pojo) {\n        if (pojo[prop] instanceof Entity) {\n          entityToAttach[prop] = pojo[prop];\n          delete pojo[prop];\n        }\n      }\n    }\n\n    let entity = this._presentationEntityFromDbo({\n      dbo: pojo || {}\n    });\n\n    for (let prop in entityToAttach) {\n      if (Object.prototype.hasOwnProperty.call(entityToAttach, prop)) {\n        entity[prop] = entityToAttach[prop];\n      }\n    }\n\n    return entity;\n  }\n\n  _createEntity({key, deferred}: {key: string, deferred?: boolean}): Entity {\n\n    let entity = new Entity({\n      key,\n      deferred,\n      dataClass: this.dataClass\n    });\n    let business = new EntityBusiness({\n      wakJSC: this.wakJSC,\n      dataClass: this.dataClass,\n      entity,\n      dataClassBusiness: this\n    });\n    business._decorateEntity();\n\n    return entity;\n  }\n\n  _createCollection({uri, deferred, pageSize, initialSelect}\n    :{uri: string, deferred?: boolean, pageSize?: number, initialSelect?: string}): Collection {\n\n    let collection = new Collection({\n        deferred: deferred,\n        dataClass: this.dataClass\n      });\n    let business = new CollectionBusiness({\n      wakJSC: this.wakJSC,\n      dataClass: this.dataClass,\n      dataClassBusiness: this,\n      collection,\n      collectionUri: uri,\n      pageSize,\n      initialSelect\n    });\n    business._decorateCollection();\n\n    return collection;\n  }\n\n  _createMedia({uri, isImage, attributeName, entity}\n   :{uri: string, isImage: boolean, attributeName: string, entity: Entity}): Media {\n     \n    let media = new Media({uri});\n    let business = new MediaBusiness({\n      wakJSC: this.wakJSC,\n      media,\n      dataClassBusiness: this,\n      isImage,\n      attributeName,\n      entity\n    });\n\n    business._decorateMedia();\n\n    return media;\n  }\n\n  _presentationEntityFromDbo({dbo}: {dbo: EntityDBO}): Entity {\n    var entity: Entity;\n\n    if (!dbo) {\n      entity = null;\n    }\n    if (dbo.__deferred) {\n      entity = this._createEntity({\n        key: dbo.__deferred.__KEY,\n        deferred: true\n      });\n    }\n    else {\n      entity = this._createEntity({\n        key: dbo.__KEY\n      });\n      entity._stamp = dbo.__STAMP;\n\n      for (let attr of this.dataClass.attributes) {\n\n        let dboAttribute = dbo[attr.name];\n\n        if (dboAttribute) {\n          if (attr instanceof AttributeRelated) {\n            //Kind of recursive call with a potententialy different instance of\n            //DataClassBusiness\n            let business = _dataClassBusinessMap.get(attr.type);\n            entity[attr.name] = business._presentationEntityFromDbo({\n              dbo: dboAttribute\n            });\n          }\n          else if (attr instanceof AttributeCollection) {\n            let business = _dataClassBusinessMap.get(attr.entityType);\n            entity[attr.name] = business._presentationCollectionFromDbo({\n              dbo: dboAttribute\n            });\n          }\n          else if (attr.type === 'image' || attr.type === 'blob') {\n            var uri: string;\n            \n            if (dboAttribute && dboAttribute.__deferred && dboAttribute.__deferred.uri) {\n              uri = dboAttribute.__deferred.uri;\n            }\n            else {\n              uri = null;\n            }\n            entity[attr.name] = this._createMedia({\n              uri,\n              isImage: attr.type === 'image',\n              attributeName: attr.name,\n              entity\n            });\n          }\n          else {\n            entity[attr.name] = dboAttribute || null;\n          }\n        }\n        else {\n          //Even if the property is null, we need a media for this kind of attributes\n          //to handle the upload part\n          if (attr.type === 'image' || attr.type === 'blob') {\n            entity[attr.name] = this._createMedia({\n              uri: null,\n              isImage: attr.type === 'image',\n              attributeName: attr.name,\n              entity\n            });\n          }\n          else {\n            entity[attr.name] = null;\n          }\n        }\n      }\n    }\n\n    return entity;\n  }\n\n  _presentationCollectionFromDbo({dbo, pageSize, initialSelect}:\n    {dbo: CollectionDBO, pageSize?: number, initialSelect?: string}): Collection {\n      \n    var collection: Collection;\n\n    if (!dbo) {\n      collection = null;\n    }\n    else if (dbo.__deferred) {\n      collection = this._createCollection({\n        deferred: true,\n        uri: dbo.__deferred.uri\n      });\n    }\n    else {\n      collection = this._createCollection({\n        uri: dbo.__ENTITYSET,\n        pageSize: pageSize || dbo.__ENTITIES.length,\n        initialSelect\n      });\n      collection._count     = dbo.__COUNT;\n      collection._first     = dbo.__FIRST;\n      collection._sent      = dbo.__SENT;\n      collection._pageSize  = pageSize;\n\n      for (let dboEntity of dbo.__ENTITIES) {\n        collection.entities.push(this._presentationEntityFromDbo({\n          dbo: dboEntity\n        }));\n      }\n    }\n\n    return collection;\n  }\n}\n\nexport default DataClassBusiness;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/business/dataclass-business.ts\n **/","import AbstractBusiness from './abstract-business';\nimport EntityService from '../data-access/service/entity-service';\nimport {AttributeRelated, AttributeCollection} from '../presentation/dataclass';\nimport Entity from '../presentation/entity';\nimport {DataClass} from '../presentation/dataclass';\nimport DataClassBusiness from './dataclass-business';\nimport {QueryOption} from '../presentation/query-option';\nimport {MethodAdapter} from './method-adapter';\n\nexport interface EntityDBO {\n  __KEY?: string;\n  __STAMP?: number;\n  __deferred?: {uri: string, __KEY: string};\n  \n  [key: string]: any;\n}\n\nclass EntityBusiness extends AbstractBusiness {\n  \n  private entity: Entity;\n  private dataClass: DataClass;\n  private dataClassBusiness: DataClassBusiness;\n  private service: EntityService;\n  \n  constructor({wakJSC, entity, dataClass, dataClassBusiness}) {\n    super({wakJSC});\n\n    this.entity = entity;\n    this.dataClass = dataClass;\n    this.dataClassBusiness = dataClassBusiness;\n    this.service = new EntityService({\n      wakJSC,\n      entity,\n      dataClass\n    });\n  }\n\n  _decorateEntity() {\n    this.entity.save = this.save.bind(this);\n    this.entity.delete = this.delete.bind(this);\n    this.entity.fetch = this.fetch.bind(this);\n\n    this._addUserDefinedMethods();\n  }\n\n  _addUserDefinedMethods() {\n    let _this_ = this;\n    this.dataClassBusiness.methods.entity.forEach(method => {\n      //Voluntary don't use fat arrow notation to use arguments object without a bug\n      this.entity[method] = function() {\n        let params = Array.from(arguments);\n        return _this_.callMethod(method, params);\n      };\n    });\n  }\n\n  fetch(options?: QueryOption): Promise<Entity> {\n    let opt = options || {};\n    \n    if (opt.filter !== undefined || opt.params !== undefined || opt.pageSize !== undefined ||\n      opt.start !== undefined || opt.orderBy !== undefined) {\n      throw new Error('Entity.fetch: options filter, params, pageSize, start and orderBy are not allowed');\n    }\n    \n    return this.dataClassBusiness.find(this.entity._key, options).then(fresherEntity => {\n      this._refreshEntity({fresherEntity});\n      return this.entity;\n    });\n  }\n\n  callMethod(methodName: string, parameters: any[]): Promise<any> {\n    if (!this.entity._key) {\n      throw new Error('Entity.' + methodName + ': can not be called on an unsaved entity');\n    }\n\n    return this.service.callMethod(methodName, parameters)\n    .then(obj => {\n      \n      return MethodAdapter.transform(obj, this.dataClassBusiness._dataClassBusinessMap);\n    });\n  }\n\n  delete(): Promise<void> {\n    if (!this.entity._key) {\n      throw new Error('Entity.delete: can not delete unsaved entity');\n    }\n\n    return this.service.delete().then(() => {\n      this.entity = null;\n    });\n  }\n\n  save(): Promise<Entity> {\n    let data: EntityDBO = {};\n\n    if (this.entity._key && this.entity._stamp) {\n      data.__KEY   = this.entity._key;\n      data.__STAMP = this.entity._stamp;\n    }\n\n    for (let attr of this.dataClass.attributes) {\n      let objAttr = this.entity[attr.name] || null;\n\n      if (attr instanceof AttributeRelated) {\n        data[attr.name] = objAttr ? objAttr._key : null;\n      }\n      else if (!(attr instanceof AttributeCollection) && !attr.readOnly) {\n        data[attr.name] = objAttr;\n      }\n    }\n\n    //If first-level related entities were already expanded, we will save the\n    //entity and ask the server to expand theses attributes on its response\n    //So, the user keeps its entities expanded\n    let expand = this._getExpandString();\n\n    return this.service.save(data, expand).then(entityDbo => {\n      let fresherEntity = this.dataClassBusiness._presentationEntityFromDbo({\n        dbo: entityDbo\n      });\n\n      this._refreshEntity({fresherEntity});\n      return this.entity;\n    });\n  }\n\n  _refreshEntity({fresherEntity}: {fresherEntity: Entity}) {\n    for (let prop in fresherEntity) {\n      if (Object.prototype.hasOwnProperty.call(fresherEntity, prop)) {\n        this.entity[prop] = fresherEntity[prop];\n      }\n    }\n  }\n\n  _getExpandString(): string {\n    var expand = '';\n    for (let attr of this.dataClass.attributes) {\n      if (attr instanceof AttributeRelated || attr instanceof AttributeCollection) {\n        if (this.entity[attr.name] instanceof Entity) {\n          expand += attr.name + ',';\n        }\n      }\n    }\n\n    return expand.length > 0 ? expand.slice(0, -1) : null;\n  }\n}\n\nexport default EntityBusiness;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/business/entity-business.ts\n **/","import AbstractService from './abstract-service';\nimport Util from '../util';\nimport Entity from '../../presentation/entity';\nimport {DataClass} from '../../presentation/dataclass';\nimport {EntityDBO} from '../../business/entity-business';\n\nclass EntityService extends AbstractService {\n  \n  private entity: Entity;\n  private dataClass: DataClass;\n  \n  constructor({wakJSC, entity, dataClass}) {\n    super({wakJSC});\n\n    this.entity = entity;\n    this.dataClass = dataClass;\n  }\n\n  save(data: EntityDBO, expand: string): Promise<EntityDBO> {\n\n    var expandStr = '';\n    if (expand) {\n      expandStr = '&$expand=' + expand;\n    }\n\n    return this.httpClient.post({\n      uri: '/' + this.dataClass.name + '?$method=update' + expandStr,\n      data\n    }).then(res => {\n      var entity = JSON.parse(res.body);\n      delete entity.__entityModel;\n      Util.removeRestInfoFromEntity(entity);\n\n      return entity;\n    });\n  }\n\n  callMethod(methodName: string, parameters: any[]): Promise<any> {\n    return this.httpClient.post({\n      uri: '/' + this.dataClass.name + '(' + this.entity._key + ')/' + methodName,\n      data: parameters\n    }).then(res => {\n      let obj = JSON.parse(res.body);\n      return obj.result || obj || null;\n    });\n  }\n\n  delete(): Promise<boolean> {\n    return this.httpClient.get({\n      uri: '/' + this.dataClass.name + '(' + this.entity._key + ')?$method=delete'\n    }).then(res => {\n      let obj = JSON.parse(res.body);\n\n      if (!(obj && obj.ok === true)) {\n        return <any>Promise.reject(new Error());\n      }\n      else {\n        return true;\n      }\n    });\n  }\n}\n\nexport default EntityService;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/data-access/service/entity-service.ts\n **/","import {QueryOption} from '../presentation/query-option';\n\nclass Util {\n  static handleOptions(options: QueryOption) {\n\n    if (!options) {\n      return '';\n    }\n\n    let {\n      select,\n      filter,\n      params,\n      pageSize,\n      start,\n      orderBy,\n      method,\n      emMethod\n    } = options;\n\n    var ret = '?';\n\n    if (select) {\n      ret += '&$expand=' + select;\n    }\n\n    if (filter) {\n      ret += '&$filter=\\\"' + filter + '\\\"';\n    }\n\n    if (orderBy) {\n      ret += '&$orderby=' + orderBy;\n    }\n\n    if (params) {\n      if (!Array.isArray(params)) {\n        throw new Error('params option must be an array');\n      }\n\n      if (params.length > 0) {\n        var p = '[';\n\n        for (let elt of params) {\n          if (typeof elt === 'string') {\n            p += '\\\"' + elt + '\\\",'\n          }\n          else {\n            p += elt + ',';\n          }\n        }\n\n        p   = p.slice(0, -1);\n        p   += ']';\n        ret += '&$params=\\'' + p + '\\'';\n      }\n    }\n\n    if (pageSize) {\n      if (!this.isInteger(pageSize)) {\n        throw new Error('pageSize option must be an integer');\n      }\n\n      ret += '&$limit=' + pageSize;\n    }\n\n    if (start) {\n      if (!this.isInteger(start)) {\n        throw new Error('start option must be an integer');\n      }\n\n      ret += '&$skip=' + start;\n    }\n\n    if (method) {\n      ret += '&$method=' + method\n    }\n    \n    if (emMethod) {\n      ret += '&$emMethod=' + emMethod;\n    }\n\n    if (ret.length > 1 && ret[1] === '&') {\n      ret = ret.replace('?&', '?');\n    }\n\n    return ret === '?' ? '' : ret;\n  }\n\n  static isInteger(n: any): boolean {\n    return typeof n === 'number' && !isNaN(n) && (n % 1) === 0;\n  }\n\n  static removeRestInfoFromEntity(entity: any): void {\n    for (let prop in entity) {\n      if (Object.prototype.hasOwnProperty.call(entity, prop)) {\n        let p = entity[prop];\n        if (p && p.__deferred && p.__deferred.__KEY) { //Do not remove uri for collection\n          delete p.__deferred.uri;\n        }\n      }\n    }\n  }\n}\n\nexport default Util;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/data-access/util.ts\n **/","import {DataClass} from './dataclass';\nimport {QueryOption} from './query-option';\n\nclass Entity {\n  \n  public _key: string;\n  public _stamp: number;\n  public _deferred: boolean;\n  public _dataClass: DataClass;\n  \n  [key: string]: any;\n  \n  public save: () => Promise<Entity>;\n  public delete: () => Promise<void>;\n  public fetch: (options?: QueryOption) => Promise<Entity>;\n  \n  constructor({key, deferred, dataClass}:\n   {key: string, deferred: boolean, dataClass: DataClass}) {\n     \n    this._key = key;\n    this._deferred = deferred === true;\n\n    Object.defineProperty(this, '_dataClass', {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: dataClass\n    });\n  }\n}\n\nexport default Entity;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/presentation/entity.ts\n **/","import DataClassBusiness from './dataclass-business';\n\nexport class MethodAdapter {\n  \n  public static transform(object: any, dcBusinessMap: Map<string, DataClassBusiness>): any {\n    if (object && object.__entityModel) {\n      let business = dcBusinessMap.get(object.__entityModel);\n\n      if (business) {\n        //Returned object is a collection\n        if (typeof object.__COUNT !== 'undefined' &&\n            typeof object.__ENTITIES !== 'undefined' &&\n            typeof object.__FIRST !== 'undefined' &&\n            typeof object.__SENT !== 'undefined') {\n          return business._presentationCollectionFromDbo({\n            dbo: object\n          });\n        }\n        //Returned object is an entity\n        else if (object.__KEY && object.__STAMP) {\n          return business._presentationEntityFromDbo({\n            dbo: object\n          });\n        }\n      }\n    }\n\n    return object;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/business/method-adapter.ts\n **/","import AbstractService from './abstract-service';\nimport Util from '../util';\nimport {QueryOption} from '../../presentation/query-option';\nimport {DataClass} from '../../presentation/dataclass';\nimport {EntityDBO} from '../../business/entity-business';\nimport {CollectionDBO} from '../../business/collection-business';\n\nclass DataClassService extends AbstractService {\n\n  private dataClass: DataClass;\n\n  constructor({wakJSC, dataClass}) {\n    super({wakJSC});\n\n    this.dataClass = dataClass;\n  }\n\n  find(id: string|number, options: QueryOption): Promise<EntityDBO> {\n    \n    if (typeof id !== 'string' && typeof id !== 'number') {\n      throw new Error('DataClass.find: Invalid id type');\n    }\n\n    let optString = Util.handleOptions(options);\n\n    return this.httpClient.get({\n      uri: '/' + this.dataClass.name + '(' + id + ')' + optString\n    })\n      .then(res => {\n        let entity = JSON.parse(res.body);\n        delete entity.__entityModel;\n\n        Util.removeRestInfoFromEntity(entity);\n\n        return entity;\n      });\n  }\n\n  query(options: QueryOption): Promise<CollectionDBO> {\n\n    options.method = 'entityset';\n\n    let optString = Util.handleOptions(options);\n\n    return this.httpClient.get({\n      uri: '/' + this.dataClass.name + optString\n    }).then(res => {\n      let collection = JSON.parse(res.body);\n      delete collection.__entityModel;\n\n      for (let entity of collection.__ENTITIES) {\n        Util.removeRestInfoFromEntity(entity);\n      }\n\n      return collection;\n    });\n  }\n\n  callMethod(methodName: string, parameters: any[]): Promise<any> {\n    return this.httpClient.post({\n      uri: '/' + this.dataClass.name + '/' + methodName,\n      data: parameters\n    }).then(res => {\n      let obj = JSON.parse(res.body);\n      return obj.result || obj || null;\n    });\n  }\n}\n\nexport default DataClassService;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/data-access/service/dataclass-service.ts\n **/","import AbstractBusiness from './abstract-business';\nimport CollectionService from '../data-access/service/collection-service';\nimport Const from '../const';\nimport {EntityDBO} from './entity-business';\nimport Collection from '../presentation/collection';\nimport {DataClass} from '../presentation/dataclass';\nimport DataClassBusiness from './dataclass-business';\nimport {QueryOption} from '../presentation/query-option';\nimport {MethodAdapter} from './method-adapter';\n\nexport interface CollectionDBO {\n  __ENTITYSET: string;\n  __COUNT: number;\n  __FIRST: number;\n  __SENT: number;\n  __ENTITIES: EntityDBO[];\n  __deferred: {uri: string};\n  \n  [key: string]: any;\n}\n\nclass CollectionBusiness extends AbstractBusiness {\n  \n  private collection: Collection;\n  private dataClass: DataClass;\n  private dataClassBusiness: DataClassBusiness;\n  private service: CollectionService;\n  private pageSize: number;\n  private initialSelect: string;\n  \n  constructor({wakJSC, dataClass, collection, dataClassBusiness, collectionUri, pageSize, initialSelect}) {\n    super({wakJSC});\n\n    this.collection = collection;\n    this.dataClass = dataClass;\n    this.dataClassBusiness = dataClassBusiness;\n    this.service = new CollectionService({\n      wakJSC,\n      collection,\n      dataClass,\n      collectionUri\n    });\n    this.pageSize = pageSize;\n    this.initialSelect = initialSelect;\n  }\n\n  _decorateCollection() {\n    this.collection.fetch = this.fetch.bind(this);\n    this.collection.nextPage = this.nextPage.bind(this);\n    this.collection.prevPage = this.prevPage.bind(this);\n    this.collection.more = this.more.bind(this);\n\n    this._addUserDefinedMethods();\n  }\n\n  fetch(options?: QueryOption): Promise<Collection> {\n    let opt = options || {};\n\n    if (opt.method && opt.method.length > 0) {\n      throw new Error('Collection.fetch: option method is not allowed');\n    }\n\n    if (!opt.pageSize) {\n      opt.pageSize = this.pageSize ? this.pageSize : Const.DEFAULT_PAGE_SIZE;\n    }\n\n    if (opt.select) {\n      this.initialSelect = opt.select;\n    }\n    \n    this.pageSize = opt.pageSize;\n\n    return this.service.fetch(opt).then(collectionDbo => {\n      let fresherCollection = this.dataClassBusiness._presentationCollectionFromDbo({\n        dbo: collectionDbo,\n        pageSize: this.pageSize\n      });\n\n      this._refreshCollection({fresherCollection});\n      return this.collection;\n    });\n  }\n\n  more(): Promise<Collection> {\n\n    if (this.collection._deferred === true) {\n      throw new Error('Collection.more: can not call more on a deferred collection');\n    }\n\n    let options: QueryOption = {\n      start: this.collection._first + this.collection._sent,\n      pageSize: this.pageSize\n    };\n\n    if (this.initialSelect) {\n      options.select = this.initialSelect;\n    }\n\n    return this.service.fetch(options)\n      .then(dbo => {\n        this.collection._sent += dbo.__ENTITIES.length;\n\n        for (let entity of dbo.__ENTITIES) {\n          this.collection.entities.push(this.dataClassBusiness._presentationEntityFromDbo({\n            dbo: entity\n          }));\n        }\n\n        return this.collection;\n      });\n  }\n\n  nextPage(): Promise<Collection> {\n\n    if (this.collection._deferred === true) {\n      throw new Error('Collection.nextPage: can not call nextPage on a deferred collection');\n    }\n\n    let options: QueryOption = {\n      start: this.collection._first + this.pageSize,\n      pageSize: this.pageSize\n    };\n\n    if (this.initialSelect) {\n      options.select = this.initialSelect;\n    }\n\n    return this.fetch(options);\n  }\n\n  prevPage(): Promise<Collection> {\n\n    if (this.collection._deferred === true) {\n      throw new Error('Collection.prevPage: can not call prevPage on a deferred collection');\n    }\n\n    let options: QueryOption = {\n      start: this.collection._first - this.pageSize,\n      pageSize: this.pageSize\n    };\n\n    if (this.initialSelect) {\n      options.select = this.initialSelect;\n    }\n\n    return this.fetch(options);\n  }\n\n  _addUserDefinedMethods() {\n    let _this_ = this;\n    this.dataClassBusiness.methods.collection.forEach(method => {\n      //Voluntary don't use fat arrow notation to use arguments object without a bug\n      this.collection[method] = function() {\n        let params = Array.from(arguments);\n        return _this_.callMethod(method, params);\n      };\n    });\n  }\n\n  callMethod(methodName: string, parameters: any[]) {\n    if (this.collection._deferred) {\n      throw new Error('Collection.' + methodName + ': can not be called on a deferred collection');\n    }\n    \n    return this.service.callMethod(methodName, parameters)\n      .then((obj: any) => {\n        return MethodAdapter.transform(obj, this.dataClassBusiness._dataClassBusinessMap);\n      });\n  }\n\n  _refreshCollection({fresherCollection}) {\n    for (let prop in fresherCollection) {\n      if (Object.prototype.hasOwnProperty.call(fresherCollection, prop)) {\n        if (typeof fresherCollection[prop] !== 'function') {\n          this.collection[prop] = fresherCollection[prop];\n        }\n      }\n    }\n  }\n}\n\nexport default CollectionBusiness;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/business/collection-business.ts\n **/","import AbstractService from './abstract-service';\nimport Util from '../util';\nimport Collection from '../../presentation/collection';\nimport {DataClass} from '../../presentation/dataclass';\nimport {QueryOption} from '../../presentation/query-option';\nimport {CollectionDBO} from '../../business/collection-business';\n\nclass CollectionService extends AbstractService {\n  \n  private collection: Collection;\n  private dataClass: DataClass;\n  private collectionUri: string;\n  private isEntitySet: boolean;\n  \n  constructor({wakJSC, collection, dataClass, collectionUri}) {\n    super({wakJSC});\n\n    this.collection = collection;\n    this.dataClass = dataClass;\n    this.collectionUri = collectionUri;\n    this.isEntitySet = this._isEntitySetUri({uri: collectionUri});\n  }\n\n  fetch(options: QueryOption): Promise<CollectionDBO> {\n\n    if (!this.isEntitySet) {\n      if(options.select && options.select.length > 0) {\n        throw new Error('Collection.fetch: option select is not allowed when collection is deferred');\n      }\n    }\n\n    options.method = 'subentityset';\n\n    var optString = Util.handleOptions(options);\n\n    //Remove the first ? on optString if it's not an entitySet (because there is also\n    //?$expand=... on collectionUri), and add a &\n    if (!this.isEntitySet) {\n      optString = '&' + optString.slice(1);\n    }\n\n    //Remove the /rest/ part of the URI as our service will add it on its own\n    // let uri = this.collectionUri.slice(5);\n    let uri = this._removeRestFromUri(this.collectionUri);\n\n    return this.httpClient.get({\n      uri: uri + optString\n    }).then(res => {\n      let obj = JSON.parse(res.body);\n\n      if (obj.__ENTITYSET) {\n        this.collectionUri = obj.__ENTITYSET;\n        this.isEntitySet = this._isEntitySetUri({uri: obj.__ENTITYSET});\n      }\n\n      delete obj.__entityModel;\n\n      for (let entity of obj.__ENTITIES) {\n        Util.removeRestInfoFromEntity(entity);\n      }\n\n      return obj;\n    });\n  }\n  \n  public callMethod(methodName: string, parameters: any[]): Promise<any> {\n    //Two cases. If it's an entity set, just call the method\n    //If not, call it with emMethod and subentityset parameters\n    let uri = this._removeRestFromUri(this.collectionUri);\n    \n    if (this.isEntitySet) {\n      uri += '/' + methodName;\n    }\n    else {\n      let optString = Util.handleOptions({\n        method: 'subentityset',\n        emMethod: methodName\n      });\n      \n      uri += '&' + optString.slice(1);\n    }\n    \n    return this.httpClient.post({\n        uri,\n        data: parameters\n      }).then(res => {\n        let obj = JSON.parse(res.body);\n        return obj.result || obj || null;\n      });\n  }\n  \n  private _removeRestFromUri(uri: string): string {\n    return uri.slice(5);\n  }\n\n  _isEntitySetUri({uri}: {uri: string}): boolean {\n    return /^\\/rest\\/\\w+\\/\\$entityset\\/[A-Z0-9]+(\\?.*)?$/i.test(uri);\n  }\n}\n\nexport default CollectionService;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/data-access/service/collection-service.ts\n **/","export default {\n  DEFAULT_PAGE_SIZE: 40,\n  DEFAULT_SESSION_DURATION: 3600 //seconds\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/const.ts\n **/","import AbstractBusiness from './abstract-business';\nimport MediaService from '../data-access/service/media-service';\nimport Media from '../presentation/media';\nimport Entity from '../presentation/entity';\nimport DataClassBusiness from './dataclass-business';\n\nclass MediaBusiness extends AbstractBusiness {\n    \n  private media: Media;\n  private entity: Entity;\n  private dataClassBusiness: DataClassBusiness;\n  private isImage: boolean;\n  private service: MediaService;\n  \n  constructor({wakJSC, media, dataClassBusiness, isImage, attributeName, entity}) {\n    super({wakJSC});\n\n    this.media = media;\n    this.entity = entity;\n    this.dataClassBusiness = dataClassBusiness;\n    this.isImage = isImage === true\n    this.service = new MediaService({\n      wakJSC,\n      mediaBusiness: this,\n      media,\n      attributeName,\n      dataClassBusiness\n    });\n  }\n\n  _decorateMedia() {\n    this.media.upload = this.upload.bind(this);\n    this.media.delete = this.delete.bind(this);\n  }\n\n  upload(file: any, mimeType?: string): Promise<Entity> {\n\n    if (!this.entity._key) {\n      throw new Error('Media.upload: entity must be saved before uploading a media');\n    }\n\n    return this.service.upload(file, mimeType).then(dbo => {\n      return dbo; //FIXME\n    }).then(() => {\n      //FIXME - crappy, force a refresh of the entity to get proper stamp and media uri\n      return this.entity.fetch();\n    });\n  }\n\n  delete(): Promise<Entity> {\n\n    if (!this.entity._key) {\n      throw new Error('Media.upload: entity must be saved before deleting a media');\n    }\n\n    return this.service.delete().then(() => {\n      //FIXME - crappy, force a refresh of the entity to get proper stamp and media uri\n      return this.entity.fetch();\n    });\n  }\n}\n\nexport default MediaBusiness;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/business/media-business.ts\n **/","import AbstractService from './abstract-service';\nimport Entity from '../../presentation/entity';\nimport Media from '../../presentation/media';\nimport HttpResponse from '../http/http-response';\nimport {EntityDBO} from '../../business/entity-business';\n\nclass MediaService extends AbstractService {\n  \n  private dataClassName: string;\n  private entity: Entity;\n  private isImage: boolean;\n  private media: Media;\n  private attributeName: string;\n  \n  constructor({wakJSC, mediaBusiness, media, attributeName, dataClassBusiness}) {\n    super({wakJSC});\n\n    this.dataClassName = dataClassBusiness.dataClass.name;\n    this.entity = mediaBusiness.entity;\n    this.isImage = mediaBusiness.isImage;\n    this.media = media;\n    this.attributeName = attributeName;\n  }\n\n  upload(file: any, mimeType: string): Promise<HttpResponse> {\n\n    var uri = this._buildUri();\n\n    if (this.isImage) {\n      uri += '?$rawPict=' + mimeType;\n    }\n\n    //FIXME - real crappy not to return some piece of information to refresh entity\n    return this.httpClient.post({\n      uri,\n      data: file,\n      binary: true\n    });\n  }\n\n  delete(): Promise<HttpResponse> {\n    var uri = '/' + this.dataClassName + '(' + this.entity._key + ')';\n    var data: EntityDBO = {\n      __KEY: this.entity._key,\n      __STAMP: this.entity._stamp\n    };\n\n    data[this.attributeName] = null;\n\n    //FIXME - crappy\n    return this.httpClient.post({\n      uri,\n      data\n    });\n  }\n\n  _buildUri(): string {\n    return '/' + this.dataClassName + '(' + this.entity._key + ')'\n     + '/' + this.attributeName;\n  }\n}\n\nexport default MediaService;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/data-access/service/media-service.ts\n **/","import Entity from './entity';\nimport {DataClass} from './dataclass';\nimport {QueryOption} from './query-option';\n\nclass Collection {\n\n  public entities: Entity[];\n  public _deferred: boolean;\n  public _count: number;\n  public _first: number;\n  public _sent: number;\n  public _pageSize: number;\n  \n  [key: string]: any;\n  \n  private _dataClass: DataClass;\n  \n  public fetch: (options?: QueryOption) => Promise<Collection>;\n  public nextPage: () => Promise<Collection>;\n  public prevPage: () => Promise<Collection>;\n  public more: () => Promise<Collection>;\n  \n  constructor({deferred, dataClass}) {\n    this.entities = [];\n    this._deferred = deferred === true;\n\n    Object.defineProperty(this, '_dataClass', {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: dataClass\n    });\n  }\n}\nexport default Collection;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/presentation/collection.ts\n **/","import Entity from './entity';\n\nclass Media {\n  \n  public uri: string;\n  \n  public upload: (file: any, mimeType?: string) => Promise<Entity>;\n  public delete: () => Promise<Entity>;\n  \n  constructor({uri}: {uri: string}) {\n    this.uri = uri;\n  }\n}\n\nexport default Media;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/presentation/media.ts\n **/","import AbstractBusiness from './abstract-business';\nimport DirectoryService from '../data-access/service/directory-service';\nimport Const from '../const';\n\nexport interface CurrentUserDBO {\n  userName: string;\n  fullName: string;\n  ID: string|number;\n}\n\nclass DirectoryBusiness extends AbstractBusiness {\n  \n  private service: DirectoryService;\n  \n  constructor({wakJSC}) {\n    super({wakJSC});\n\n    this.service = new DirectoryService({wakJSC});\n  }\n\n  login(username: string, password: string, duration?: number): Promise<boolean> {\n\n    let durationTime = duration || Const.DEFAULT_SESSION_DURATION;\n\n    if (!(typeof durationTime === 'number') || durationTime <= 0) {\n      throw new Error('Directory.login: invalid duration parameter');\n    }\n\n    return this.service.login(username, password, durationTime)\n      .catch(() => {\n        return Promise.reject(new Error('Directory.login: Unauthorized'));\n      });\n  }\n\n  logout(): Promise<boolean> {\n    return this.service.logout()\n      .catch(() => {\n        return Promise.reject(new Error('Directory.logout: logout failed'));\n      });\n  }\n\n  currentUser(): Promise<CurrentUserDBO> {\n    return this.service.currentUser()\n      .then(dbo => {\n        return dbo;\n      })\n      .catch(() => {\n        return Promise.reject(new Error('Directory.currentUser: user is not logged in'))\n      });\n  }\n\n  currentUserBelongsTo(group: string): Promise<boolean> {\n\n    if (!(typeof group === 'string')) {\n      throw new Error('Directory.currentUserBelongsTo: group must be a string');\n    }\n\n    return this.service.currentUserBelongsTo(group)\n      .then(() => {\n        return true;\n      })\n      .catch(() => {\n        return false;\n      });\n  }\n}\n\nexport default DirectoryBusiness;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/business/directory-business.ts\n **/","import AbstractService from './abstract-service';\nimport {CurrentUserDBO} from '../../business/directory-business';\n\nclass DirectoryService extends AbstractService {\n\n  login(username: string, password: string, duration: number): Promise<boolean> {\n    \n    return this.httpClient.post({\n      uri: '/$directory/login',\n      data: [username, password, duration]\n    }).then(() => {\n        return true;\n      });\n  }\n\n  logout(): Promise<boolean> {\n    return this.httpClient.get({\n      uri: '/$directory/logout'\n    }).then(res => {\n      let obj = JSON.parse(res.body);\n      if (obj.result && obj.result === true) {\n        return true;\n      }\n      else {\n        return <any>Promise.reject(new Error());\n      }\n    });\n  }\n\n  currentUser(): Promise<CurrentUserDBO> {\n    return this.httpClient.get({\n      uri: '/$directory/currentUser'\n    })\n      .then(res => {\n        let obj = JSON.parse(res.body);\n\n        if (obj.result && obj.result.ID) {\n          return obj.result;\n        }\n        else {\n          return Promise.reject(new Error());\n        }\n      });\n  }\n\n  currentUserBelongsTo(group: string): Promise<boolean> {\n    return this.httpClient.post({\n      uri: '/$directory/currentUserBelongsTo',\n      data: [group]\n    }).then(res => {\n      let obj = JSON.parse(res.body);\n\n      if (obj && obj.result && obj.result === true) {\n        return true;\n      }\n      else {\n        return <any>Promise.reject(new Error());\n      }\n    });\n  }\n}\n\nexport default DirectoryService;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/data-access/service/directory-service.ts\n **/","/// <reference path=\"./request.d.ts\" />\n\nimport request = require('request');\n\nimport {HttpClient, GetRequestOption, PostRequestOption} from './http-client';\nimport HttpResponse from './http-response';\n\nclass NodeHttpClient extends HttpClient {\n\n  private request: any;\n  private cookieJar: any;\n\n  constructor({apiPrefix}) {\n    super({apiPrefix});\n    \n    this.request = request;\n    this.cookieJar = this.request.jar();\n  }\n\n  _clearCookie(): void {\n    this.cookieJar = this.request.jar();\n  }\n\n  get({uri, params}: GetRequestOption): Promise<HttpResponse> {\n    try {\n      let res = super.get({uri, params});\n      if (res !== null) {\n        return Promise.resolve(res);\n      }\n    }\n    catch (e) {\n      return <any>Promise.reject(e);\n    }\n\n    let result = this._getWithoutInterceptor({uri, params});\n    return super.responseGet(uri, result);\n  }\n\n  _getWithoutInterceptor({uri, params}: GetRequestOption): Promise<HttpResponse> {\n    let options = {\n      url: this.prefix + uri,\n      method: 'GET',\n      qs: params,\n      jar: this.cookieJar\n    };\n\n    return this._httpResponseAdaptor({requestOptions: options});\n  }\n\n  post({uri, data, binary}: PostRequestOption): Promise<HttpResponse> {\n    try {\n      let res = super.post({uri, data, binary});\n      if (res !== null) {\n        return Promise.resolve(res);\n      }\n    }\n    catch (e) {\n      return <any>Promise.reject(e);\n    }\n\n    let options: any = {\n      url: this.prefix + uri,\n      method: 'POST',\n      form: data,\n      jar: this.cookieJar\n    };\n\n    try {\n      if (!binary) {\n        options.headers = {\n          'Content-Type': 'application/json'\n        };\n        options.form = JSON.stringify(data);\n      }\n    }\n    catch(e) {\n      return <any>Promise.reject(e);\n    }\n\n    let result = this._httpResponseAdaptor({requestOptions: options});\n    return super.responsePost(uri, result);\n  }\n\n  _httpResponseAdaptor({requestOptions}): Promise<HttpResponse> {\n    return new Promise((resolve, reject) => {\n      this.request(requestOptions, (error: any, response: any, body: string) => {\n        if (error || response.statusCode >= 400) {\n          reject(error || {statusMessage: response.statusMessage, body: body});\n        }\n        else {\n          resolve(new HttpResponse({\n            statusCode: response.statusCode,\n            headers: [],\n            body\n          }));\n        }\n      });\n    });\n  }\n}\n\nexport default NodeHttpClient;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/data-access/http/node-http-client.ts\n **/","module.exports = require(\"request\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"request\"\n ** module id = 26\n ** module chunks = 0\n **/","import HttpResponse from './http-response';\n\nexport interface RequestOption {\n  uri: string;\n}\n\nexport interface GetRequestOption extends RequestOption {\n  params?: any;\n}\n\nexport interface PostRequestOption extends RequestOption {\n  data?: any;\n  binary?: boolean;\n}\n\nexport type RequestInterceptor<T extends RequestOption> = (options: T) => any;\nexport type ResponseInterceptor = (requestUri: string, promise: Promise<HttpResponse>) => Promise<HttpResponse>;\n\nexport abstract class HttpClient {\n\n  public prefix: string;\n  \n  private _getRequestInterceptors: RequestInterceptor<GetRequestOption>[];\n  private _postRequestInterceptors: RequestInterceptor<PostRequestOption>[];\n  private _getResponseInterceptors: ResponseInterceptor[];\n  private _postResponseInterceptors: ResponseInterceptor[];\n\n  constructor({apiPrefix}: {apiPrefix: string}) {\n    this.prefix = apiPrefix;\n\n    this._getRequestInterceptors = [];\n    this._postRequestInterceptors = [];\n    this._getResponseInterceptors = [];\n    this._postResponseInterceptors = [];\n  }\n\n  public get(options: GetRequestOption): Promise<HttpResponse> {\n    for (let i = 0; i < this._getRequestInterceptors.length; i++) {\n      let interceptor = this._getRequestInterceptors[i];\n      let res = interceptor(options);\n\n      if (res !== null && (typeof res !== 'undefined')) {\n        return res;\n      }\n    }\n\n    return null;\n  }\n\n  public post(options: PostRequestOption): Promise<HttpResponse> {\n    for (let i = 0; i < this._postRequestInterceptors.length; i++) {\n      let interceptor = this._postRequestInterceptors[i];\n      let res = interceptor(options);\n\n      if (res !== null && (typeof res !== 'undefined')) {\n        return res;\n      }\n    }\n\n    return null;\n  }\n  \n  /**\n   * @return {Promise} Returns either the underlying HTTP request result, or the promise returned by the interceptor if any\n   */\n  protected responseGet(requestUri:string, promise: Promise<HttpResponse>): Promise<HttpResponse> {\n    //Execute response interceptors\n\n    for(let interceptor of this._getResponseInterceptors) {\n      let res = interceptor(requestUri, promise);\n      \n      if (res) {\n        return res;\n      }\n    }\n    \n    return promise;\n  }\n  \n  /**\n   * @return {Promise} Returns either the underlying HTTP request result, or the promise returned by the interceptor if any\n   */\n  protected responsePost(requestUri: string, promise: Promise<HttpResponse>): Promise<HttpResponse> {\n    //Execute response interceptors\n    for(let interceptor of this._postResponseInterceptors) {\n      let res = interceptor(requestUri, promise);\n      \n      if (res) {\n        return res;\n      }\n    }\n    \n    return promise;\n  }\n\n  /**\n   * @param {array|string} type - HTTP verb of the request to intercept\n   * @param {function} callback - The interceptor function to execute before HTTP request. If it returns something different than null, the underlying HTTP request won't be executed\n   * @returns {null|object} Returns null or an object, if an object is returned, the underlying HTTP request won't be executed\n   */\n  public registerRequestInterceptor(type: string|string[], callback: RequestInterceptor<RequestOption>) {\n\n    let interceptorType = this._interceptorTypeToArray(type);\n\n    interceptorType.forEach(t => {\n      if (t === 'get') {\n        this._getRequestInterceptors.push(callback);\n      }\n      else if(t === 'post') {\n        this._postRequestInterceptors.push(callback);\n      }\n    });\n  }\n  \n  public registerResponseInterceptor(type: string|string[], callback: ResponseInterceptor) {\n    \n    let interceptorType = this._interceptorTypeToArray(type);\n\n    interceptorType.forEach(t => {\n      if (t === 'get') {\n        this._getResponseInterceptors.push(callback);\n      }\n      else if(t === 'post') {\n        this._postResponseInterceptors.push(callback);\n      }\n    });\n  }\n\n  private _interceptorTypeToArray(type: string|string[]): string[] {\n    let interceptorType: string[] = [];\n\n    if (typeof type === 'string') {\n      if (!this._isValidInterceptorType(type.toLowerCase())) {\n        throw new Error('HttpClient.registerInterceptor: invalid interceptor type');\n      }\n      else {\n        interceptorType.push(type.toLowerCase());\n      }\n    }\n    else if (Array.isArray(type)) {\n      type.forEach(t => {\n        if (!this._isValidInterceptorType(t.toLowerCase())) {\n          throw new Error('HttpClient.registerInterceptor: invalid interceptor type');\n        }\n        else {\n          interceptorType.push(t.toLowerCase());\n        }\n      });\n    }\n    else {\n      throw new Error('HttpClient.registerInterceptor: type must be a string or an array');\n    }\n\n    return interceptorType;\n  }\n\n  private _isValidInterceptorType(type: string): boolean {\n    let validTypes = ['get', 'post'];\n\n    return validTypes.indexOf(type) !== -1;\n  }\n}\n\nexport default HttpClient;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/data-access/http/http-client.ts\n **/","class HttpResponse {\n  \n  public statusCode: number;\n  public headers: any[];\n  public body: string;\n  \n  constructor({statusCode, headers, body}\n    :{statusCode: number, headers: any[], body: string}) {\n    this.statusCode = statusCode;\n    this.headers = headers || [];\n    this.body = body;\n  }\n}\n\nexport default HttpResponse;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/data-access/http/http-response.ts\n **/"],"sourceRoot":""}