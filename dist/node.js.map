{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 99a968c6d720219a967b","webpack:///./src/business/abstract-business.ts","webpack:///./src/data-access/service/abstract-service.ts","webpack:///./src/presentation/dataclass.ts","webpack:///./src/data-access/util.ts","webpack:///./src/presentation/entity.ts","webpack:///./src/business/method-adapter.ts","webpack:///./src/const.ts","webpack:///./src/data-access/service/base/catalog-base-service.ts","webpack:///./src/data-access/service/base/entity-base-service.ts","webpack:///./src/presentation/media.ts","webpack:///./src/business/util.ts","webpack:///./src/data-access/service/base/dataclass-base-service.ts","webpack:///./src/data-access/service/base/collection-base-service.ts","webpack:///./src/data-access/service/base/media-base-service.ts","webpack:///./src/presentation/collection.ts","webpack:///./src/data-access/service/base/directory-base-service.ts","webpack:///./src/node.ts","webpack:///./src/wakanda-client.ts","webpack:///./src/business/catalog-business.ts","webpack:///./src/data-access/service/catalog-service.ts","webpack:///./src/presentation/catalog.ts","webpack:///./src/business/dataclass-business.ts","webpack:///./src/business/entity-business.ts","webpack:///./src/data-access/service/entity-service.ts","webpack:///./src/data-access/service/dataclass-service.ts","webpack:///./src/business/collection-business.ts","webpack:///./src/data-access/service/collection-service.ts","webpack:///./src/business/media-business.ts","webpack:///./src/data-access/service/media-service.ts","webpack:///./src/business/directory-business.ts","webpack:///./src/data-access/service/directory-service.ts","webpack:///./package.json","webpack:///./src/data-access/http/node-http-client.ts","webpack:///external \"request\"","webpack:///./src/data-access/http/http-client.ts","webpack:///./src/data-access/http/http-response.ts"],"names":[],"mappings":"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","file":"node.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WakandaClient\"] = factory();\n\telse\n\t\troot[\"WakandaClient\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 16);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 99a968c6d720219a967b","import WakandaClient from '../wakanda-client';\n\nabstract class AbstractBusiness {\n\n  public wakJSC: WakandaClient;\n\n  constructor({wakJSC}: {wakJSC: WakandaClient}) {\n    this.wakJSC = wakJSC;\n  }\n}\n\nexport default AbstractBusiness;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/business/abstract-business.ts","import WakandaClient from '../../wakanda-client';\nimport HttpClient from '../http/http-client';\n\nabstract class AbstractService {\n\n  protected httpClient: HttpClient;\n  protected wakJSC: WakandaClient;\n\n  constructor({wakJSC}: {wakJSC: WakandaClient}) {\n    this.wakJSC = wakJSC;\n    this.httpClient = wakJSC._httpClient;\n  }\n}\n\nexport default AbstractService;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/data-access/service/abstract-service.ts","import Entity from './entity';\nimport Collection from './collection';\nimport {QueryOption} from './query-option';\n\nexport class DataClass {\n\n  public name: string;\n  public collectionName: string;\n  public attributes: Attribute[];\n  public methods: {\n    entity: string[],\n    collection: string[],\n    dataClass: string[]\n  };\n\n  public find: (id: string|number, options?: QueryOption) => Promise<Entity>;\n  public query: (options?: QueryOption) => Promise<Collection>;\n  public create: (pojo?: any) => Entity;\n\n  [key: string]: any;\n\n  constructor({name, collectionName, attributes, methods}:\n    {\n      name: string,\n      collectionName: string,\n      attributes: Attribute[],\n      methods: {entity: string[], collection: string[], dataClass: string[]}\n    }) {\n\n    this.name = name;\n    this.collectionName = collectionName;\n    this.attributes = attributes;\n    this.methods = methods;\n  }\n}\n\nexport class Attribute {\n\n  public name: string;\n  public type: string;\n  public readOnly: boolean;\n  public kind: string;\n  public simpleDate: boolean;\n\n  constructor({name, type, readOnly, kind, simpleDate}:\n   {name: string, type: string, readOnly?: boolean, kind: string, simpleDate?: boolean}) {\n\n    this.name = name;\n    this.type = type;\n    this.readOnly = readOnly === true;\n    this.kind = kind;\n    this.simpleDate = simpleDate;\n  }\n}\n\nexport class AttributeRelated extends Attribute {\n\n}\n\nexport class AttributeCollection extends Attribute {\n\n  public entityType: string;\n\n  constructor({name, type, readOnly, kind, entityType}:\n    {name: string, type: string, readOnly?: boolean, kind: string, entityType: string}) {\n\n    super({name, type, readOnly, kind});\n    this.entityType = entityType;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/presentation/dataclass.ts","import {QueryOption} from '../presentation/query-option';\n\nclass Util {\n  public static handleOptions(options: QueryOption) {\n\n    if (!options) {\n      return '';\n    }\n\n    let {\n      select,\n      filter,\n      params,\n      pageSize,\n      start,\n      orderBy,\n      method,\n      emMethod\n    } = options;\n\n    let ret = '?';\n\n    if (select) {\n      ret += '&$expand=' + select;\n    }\n\n    if (filter) {\n      ret += '&$filter=\\\"' + filter + '\\\"';\n    }\n\n    if (orderBy) {\n      ret += '&$orderby=' + orderBy;\n    }\n\n    if (params) {\n      if (!Array.isArray(params)) {\n        throw new Error('params option must be an array');\n      }\n\n      if (params.length > 0) {\n        let p = '[';\n\n        for (let elt of params) {\n          if (typeof elt === 'string') {\n            p += '\\\"' + elt + '\\\",';\n          }\n          else {\n            p += elt + ',';\n          }\n        }\n\n        p   = p.slice(0, -1);\n        p   += ']';\n        ret += '&$params=\\'' + p + '\\'';\n      }\n    }\n\n    if (pageSize) {\n      if (!this.isInteger(pageSize)) {\n        throw new Error('pageSize option must be an integer');\n      }\n\n      ret += '&$limit=' + pageSize;\n    }\n\n    if (start) {\n      if (!this.isInteger(start)) {\n        throw new Error('start option must be an integer');\n      }\n\n      ret += '&$skip=' + start;\n    }\n\n    if (method) {\n      ret += '&$method=' + method;\n    }\n\n    if (emMethod) {\n      ret += '&$emMethod=' + emMethod;\n    }\n\n    if (ret.length > 1 && ret[1] === '&') {\n      ret = ret.replace('?&', '?');\n    }\n\n    return ret === '?' ? '' : ret;\n  }\n\n  public static isInteger(n: any): boolean {\n    return typeof n === 'number' && !isNaN(n) && (n % 1) === 0;\n  }\n\n  public static removeRestInfoFromEntity(entity: any): void {\n    for (let prop in entity) {\n      if (Object.prototype.hasOwnProperty.call(entity, prop)) {\n        let p = entity[prop];\n        if (p && p.__deferred && p.__deferred.__KEY) { //Do not remove uri for collection\n          delete p.__deferred.uri;\n        }\n      }\n    }\n  }\n}\n\nexport default Util;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/data-access/util.ts","import {DataClass} from './dataclass';\nimport {QueryOption} from './query-option';\n\nclass Entity {\n\n  public _key: string;\n  public _stamp: number;\n  public _deferred: boolean;\n  public _dataClass: DataClass;\n\n  [key: string]: any;\n\n  public save: () => Promise<Entity>;\n  public delete: () => Promise<void>;\n  public fetch: (options?: QueryOption) => Promise<Entity>;\n  public recompute: () => Promise<Entity>;\n\n  constructor({key: entityKey, deferred, dataClass}:\n   {key: string, deferred: boolean, dataClass: DataClass}) {\n\n    this._key = entityKey;\n    this._deferred = deferred === true;\n\n    Object.defineProperty(this, '_dataClass', {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: dataClass\n    });\n  }\n}\n\nexport default Entity;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/presentation/entity.ts","import DataClassBusiness from './dataclass-business';\n\nexport class MethodAdapter {\n\n  public static transform(object: any, dcBusinessMap: Map<string, DataClassBusiness>): any {\n    if (object && object.__entityModel) {\n      let business = dcBusinessMap.get(object.__entityModel);\n\n      if (business) {\n        //Returned object is a collection\n        if (typeof object.__COUNT !== 'undefined' &&\n            typeof object.__ENTITIES !== 'undefined' &&\n            typeof object.__FIRST !== 'undefined' &&\n            typeof object.__SENT !== 'undefined') {\n          return business._presentationCollectionFromDbo({\n            dbo: object\n          });\n        }\n        //Returned object is an entity\n        else if (object.__KEY && object.__STAMP) {\n          return business._presentationEntityFromDbo({\n            dbo: object\n          });\n        }\n      }\n    }\n\n    return object;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/business/method-adapter.ts","export default {\n  DEFAULT_PAGE_SIZE: 40,\n  DEFAULT_SESSION_DURATION: 3600 //seconds\n};\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/const.ts","import HttpClient from '../../http/http-client';\nimport {IDataClassDBO} from '../../../business/catalog-business';\n\nexport class CatalogBaseService {\n\n  public static get({httpClient, dataClasses, catalog}: {httpClient: HttpClient, dataClasses?: string|string[], catalog: string}) {\n    let strDataclasses = '/';\n\n    if (Array.isArray(dataClasses)) {\n      strDataclasses += dataClasses.join();\n    }\n    else if (typeof dataClasses === 'undefined') {\n      strDataclasses += '$all';\n    }\n    else {\n      throw new Error('Catalog.get: first parameter should be an array');\n    }\n\n    let strCatalog = catalog ? '/' + catalog : '';\n\n    return httpClient.get({uri: '/rest/$catalog' + strCatalog + strDataclasses})\n      .then(res => {\n        let catalogContent: IDataClassDBO[] = [];\n        let rawObj = JSON.parse(res.body);\n\n        if (rawObj.dataClasses) {\n          for (let d of rawObj.dataClasses) {\n\n            let attributes: any[] = [];\n            if (d.attributes) { //Seriously? :)\n              for (let attr of d.attributes) {\n                attributes.push({\n                  name: attr.name,\n                  kind: attr.kind,\n                  type: attr.type,\n                  readOnly: attr.readOnly,\n                  simpleDate: attr.simpleDate === undefined ? undefined : attr.simpleDate\n                });\n              }\n            }\n\n            let methods: any[] = [];\n            if (d.methods) {\n              for (let m of d.methods) {\n                methods.push({\n                  name: m.name,\n                  applyTo: m.applyTo\n                });\n              }\n            }\n\n            catalogContent.push({\n              name: d.name,\n              collectionName: d.collectionName,\n              attributes,\n              methods,\n              dataURI: d.dataURI\n            });\n          }\n        }\n\n        return catalogContent;\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/data-access/service/base/catalog-base-service.ts","import HttpClient from '../../http/http-client';\nimport {IEntityDBO} from '../../../business/entity-business';\nimport Util from '../../util';\n\nexport interface ISaveParams {\n  httpClient: HttpClient;\n  data: IEntityDBO;\n  expand: string;\n  dataURI: string;\n}\n\nexport interface IRecomputeParams {\n  httpClient: HttpClient;\n  data: IEntityDBO;\n  dataURI: string;\n}\n\nexport interface ICallMethodParams {\n  httpClient: HttpClient;\n  dataURI: string;\n  methodName: string;\n  parameters: any[];\n  entityKey: string;\n}\n\nexport interface IDeleteParams {\n  httpClient: HttpClient;\n  entityKey: string;\n  dataURI: string;\n}\n\nexport class EntityBaseService {\n\n  public static save({httpClient, data, expand, dataURI}: ISaveParams) {\n\n    let expandStr = '';\n    if (expand) {\n      expandStr = '&$expand=' + expand;\n    }\n\n    return httpClient.post({\n      uri: dataURI + '?$method=update' + expandStr,\n      data\n    }).then(res => {\n      let entity = JSON.parse(res.body);\n      delete entity.__entityModel;\n      Util.removeRestInfoFromEntity(entity);\n\n      return entity as IEntityDBO;\n    });\n  }\n\n  public static recompute({httpClient, dataURI, data}: IRecomputeParams) {\n\n    return httpClient.post({\n      uri: dataURI + '?$method=update&$refresh=true',\n      data\n    }).then(res => {\n      let dbo = JSON.parse(res.body);\n      delete dbo.__entityModel;\n      Util.removeRestInfoFromEntity(dbo);\n\n      return dbo as IEntityDBO;\n    });\n  }\n\n  public static callMethod({httpClient, dataURI, methodName, parameters, entityKey}: ICallMethodParams) {\n\n    return httpClient.post({\n      uri: dataURI + '(' + entityKey + ')/' + methodName,\n      data: parameters\n    }).then(res => {\n      let obj = JSON.parse(res.body);\n      return obj.result || obj || null;\n    });\n  }\n\n  public static delete({httpClient, dataURI, entityKey}: IDeleteParams): Promise<boolean> {\n\n    return httpClient.post({\n      uri: dataURI + '(' + entityKey + ')?$method=delete'\n    }).then(res => {\n      let obj = JSON.parse(res.body);\n\n      if (!(obj && obj.ok === true)) {\n        return <any>Promise.reject(new Error());\n      }\n      else {\n        return true;\n      }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/data-access/service/base/entity-base-service.ts","import Entity from './entity';\n\nclass Media {\n\n  public uri: string;\n\n  public upload: (file: any, mimeType?: string) => Promise<Entity>;\n  public delete: () => Promise<Entity>;\n\n  constructor({uri}: {uri: string}) {\n    this.uri = uri;\n  }\n}\n\nexport default Media;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/presentation/media.ts","class Util {\n\n  public static wakParseSimpleDate(stringDate: string): Date {\n    // In wakanda, simple date is a date with only year, month and hour\n    // in this format : DD!MM!YYYY\n    if (!stringDate) {\n      return null;\n    }\n\n    let arr = stringDate.split('!');\n    if (arr.length !== 3) {\n      // return null or throw an error, simple date format is ko\n      return null;\n    }\n    let date: Date = new Date(Date.UTC(parseInt(arr[2], 10), parseInt(arr[1], 10) - 1, parseInt(arr[0], 10)));\n    return date;\n  }\n\n  public static wakToStringSimpleDate(date: Date): String {\n    let wakSimpleDate: String;\n\n    if (!(date instanceof Date)) {\n      return null;\n    }\n\n    wakSimpleDate = date.getUTCDate() + '!' + (date.getUTCMonth() + 1) + '!' + date.getUTCFullYear();\n    return wakSimpleDate;\n  }\n}\n\nexport default Util;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/business/util.ts","import HttpClient from '../../http/http-client';\nimport {QueryOption} from '../../../presentation/query-option';\nimport {IEntityDBO} from '../../../business/entity-business';\nimport {ICollectionDBO} from '../../../business/collection-business';\nimport Util from '../../util';\n\nexport interface IFindParams {\n  httpClient: HttpClient;\n  key: number|string;\n  options: QueryOption;\n  dataURI: string;\n}\n\nexport interface IQueryParams {\n  httpClient: HttpClient;\n  options: QueryOption;\n  dataURI: string;\n}\n\nexport interface ICallMethodParams {\n  httpClient: HttpClient;\n  methodName: string;\n  parameters: any[];\n  dataURI: string;\n}\n\nexport class DataClassBaseService {\n\n  public static find({httpClient, key, options, dataURI}: IFindParams) {\n\n    if (typeof key !== 'string' && typeof key !== 'number') {\n      throw new Error('DataClass.find: Invalid id type');\n    }\n\n    let optString = Util.handleOptions(options);\n\n    return httpClient.get({\n      uri: dataURI + '(' + key + ')' + optString\n    })\n      .then(res => {\n        let entity = JSON.parse(res.body);\n        delete entity.__entityModel;\n\n        Util.removeRestInfoFromEntity(entity);\n\n        return entity as IEntityDBO;\n      });\n  }\n\n  public static query({httpClient, options, dataURI}: IQueryParams) {\n\n    options.method = 'entityset';\n\n    if (Array.isArray(options.params)) {\n      options.params = this._sanitizeOptionParams(options.params);\n    }\n\n    let optString = Util.handleOptions(options);\n\n    return httpClient.get({\n      uri: dataURI + optString\n    }).then(res => {\n      let collection = JSON.parse(res.body);\n      delete collection.__entityModel;\n\n      for (let entity of collection.__ENTITIES) {\n        Util.removeRestInfoFromEntity(entity);\n      }\n\n      return collection as ICollectionDBO;\n    });\n  }\n\n  public static callMethod({httpClient, methodName, parameters, dataURI}: ICallMethodParams) {\n\n    return httpClient.post({\n      uri: dataURI + '/' + methodName,\n      data: parameters\n    }).then(res => {\n      let obj = JSON.parse(res.body);\n      return obj.result || obj || null;\n    });\n  }\n\n  private static _sanitizeOptionParams(params: any[]): any[] {\n    return params.map(element => {\n      if (element instanceof Date) {\n        return element.toISOString();\n      }\n      else {\n        return element;\n      }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/data-access/service/base/dataclass-base-service.ts","import HttpClient from '../../http/http-client';\nimport {QueryOption} from '../../../presentation/query-option';\nimport {ICollectionDBO} from '../../../business/collection-business';\nimport Util from '../../util';\n\nexport interface IBaseParams {\n  httpClient: HttpClient;\n  collectionUri: string;\n  isEntitySet: boolean;\n}\n\nexport interface IFetchParams extends IBaseParams {\n  options: QueryOption;\n}\n\nexport interface ICallMethodParams extends IBaseParams {\n  methodName: string;\n  parameters: any[];\n}\n\nexport class CollectionBaseService {\n\n  public static fetch({httpClient, collectionUri, isEntitySet, options}: IFetchParams) {\n\n    if (!isEntitySet) {\n      if (options.select && options.select.length > 0) {\n        throw new Error('Collection.fetch: option select is not allowed when collection is deferred');\n      }\n    }\n\n    options.method = 'subentityset';\n\n    let optString = Util.handleOptions(options);\n\n    //Remove the first ? on optString if it's not an entitySet (because there is also\n    //?$expand=... on collectionUri), and add a &\n    if (!isEntitySet) {\n      optString = '&' + optString.slice(1);\n    }\n\n    let uri = collectionUri;\n\n    return httpClient.get({\n      uri: uri + optString\n    }).then(res => {\n      let obj = JSON.parse(res.body);\n\n      delete obj.__entityModel;\n\n      for (let entity of obj.__ENTITIES) {\n        Util.removeRestInfoFromEntity(entity);\n      }\n\n      return obj as ICollectionDBO;\n    });\n  }\n\n  public static callMethod({httpClient, collectionUri, isEntitySet, methodName, parameters}: ICallMethodParams) {\n    let uri = collectionUri;\n\n    if (isEntitySet) {\n      uri += '/' + methodName;\n    }\n    else {\n      let optString = Util.handleOptions({\n        method: 'subentityset',\n        emMethod: methodName\n      });\n\n      uri += '&' + optString.slice(1);\n    }\n\n    return httpClient.post({\n        uri,\n        data: parameters\n      }).then((res: any) => {\n        let obj = JSON.parse(res.body);\n        return obj.result || obj || null;\n      });\n  }\n}\n\nexport function isEntitySetUri(uri: string): boolean {\n  return /^\\/rest\\/\\w+\\/\\$entityset\\/[A-Z0-9]+(\\?.*)?$/i.test(uri);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/data-access/service/base/collection-base-service.ts","import HttpClient from '../../http/http-client';\nimport HttpResponse from '../../http/http-response';\n\nexport interface IUploadParams {\n  httpClient: HttpClient;\n  dataURI: string;\n  entityKey: string;\n  attributeName: string;\n  file: File;\n  isImage: boolean;\n}\n\nexport interface IDeleteParams {\n  httpClient: HttpClient;\n  dataURI: string;\n  entityKey: string;\n  entityStamp: number;\n  attributeName: string;\n}\n\nexport class MediaBaseService {\n\n  public static upload({httpClient, dataURI, entityKey, attributeName, file, isImage}: IUploadParams): Promise<HttpResponse> {\n\n    let uri = this._buildUri(dataURI, entityKey, attributeName);\n\n    if (isImage) {\n      uri += '?$rawPict=' + file.type;\n    }\n\n    //FIXME - real crappy not to return some piece of information to refresh entity\n    return httpClient.post({\n      uri,\n      data: file,\n      binary: true\n    });\n  }\n\n  public static delete({httpClient, dataURI, entityKey, entityStamp, attributeName}: IDeleteParams): Promise<HttpResponse> {\n    let uri = dataURI + '(' + entityKey + ')';\n    let data: any = {\n      __KEY: entityKey,\n      __STAMP: entityStamp\n    };\n\n    data[attributeName] = null;\n\n    //FIXME - crappy\n    return httpClient.post({\n      uri,\n      data\n    });\n  }\n\n  private static _buildUri(dataURI: string, entityKey: string, attributeName: string): string {\n    return dataURI + '(' + entityKey + ')' + '/' + attributeName;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/data-access/service/base/media-base-service.ts","import Entity from './entity';\nimport {DataClass} from './dataclass';\nimport {QueryOption} from './query-option';\n\nclass Collection {\n\n  public entities: Entity[];\n  public _deferred: boolean;\n  public _count: number;\n  public _first: number;\n  public _sent: number;\n  public _pageSize: number;\n\n  [key: string]: any;\n\n  /* tslint:disable */\n  private _dataClass: DataClass;\n  /* tslint:enable */\n\n  public fetch: (options?: QueryOption) => Promise<Collection>;\n  public nextPage: () => Promise<Collection>;\n  public prevPage: () => Promise<Collection>;\n  public more: () => Promise<Collection>;\n\n  constructor({deferred, dataClass}: {deferred: boolean, dataClass: DataClass}) {\n    this.entities = [];\n    this._deferred = deferred === true;\n\n    Object.defineProperty(this, '_dataClass', {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: dataClass\n    });\n  }\n}\nexport default Collection;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/presentation/collection.ts","import HttpClient from '../../http/http-client';\nimport {ICurrentUserDBO} from '../../../business/directory-business';\n\nexport interface ILoginParams {\n  httpClient: HttpClient;\n  username: string;\n  password: string;\n  duration: number;\n}\n\nexport interface ICurrentUserBelongsToParams {\n  httpClient: HttpClient;\n  group: string;\n}\n\nexport class DirectoryBaseService {\n\n  public static login({httpClient, username, password, duration}:\n  {httpClient: HttpClient, username: string, password: string, duration?: number}): Promise<boolean> {\n\n    return httpClient.post({\n      uri: '/rest/$directory/login',\n      data: [username, password, duration]\n    }).then(() => {\n        return true;\n      });\n  }\n\n  public static logout({httpClient}: {httpClient: HttpClient}): Promise<boolean> {\n    return httpClient.get({\n      uri: '/rest/$directory/logout'\n    }).then(res => {\n      let obj = JSON.parse(res.body);\n      if (obj.result && obj.result === true) {\n        return true;\n      }\n      else {\n        return <any>Promise.reject(new Error());\n      }\n    });\n  }\n\n  public static getCurrentUser({httpClient}: {httpClient: HttpClient}): Promise<ICurrentUserDBO> {\n    return httpClient.get({\n      uri: '/rest/$directory/currentUser'\n    })\n      .then(res => {\n        let obj = JSON.parse(res.body);\n\n        if (obj.result && obj.result.ID) {\n          return obj.result;\n        }\n        else {\n          return Promise.reject(new Error());\n        }\n      });\n  }\n\n  public static getCurrentUserBelongsTo({httpClient, group}: ICurrentUserBelongsToParams): Promise<boolean> {\n    return httpClient.post({\n      uri: '/rest/$directory/currentUserBelongsTo',\n      data: [group]\n    }).then(res => {\n      let obj = JSON.parse(res.body);\n\n      if (obj && obj.result && obj.result === true) {\n        return true;\n      }\n      else {\n        return <any>Promise.reject(new Error());\n      }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/data-access/service/base/directory-base-service.ts","import WakandaClient from './wakanda-client';\nimport NodeHttpClient from './data-access/http/node-http-client';\n\nimport {CatalogBaseService} from './data-access/service/base/catalog-base-service';\nimport {CollectionBaseService} from './data-access/service/base/collection-base-service';\nimport {DataClassBaseService} from './data-access/service/base/dataclass-base-service';\nimport {DirectoryBaseService} from './data-access/service/base/directory-base-service';\nimport {EntityBaseService} from './data-access/service/base/entity-base-service';\nimport {MediaBaseService} from './data-access/service/base/media-base-service';\n\nWakandaClient.HttpClient = NodeHttpClient;\n\nexport {\n  WakandaClient,\n  CatalogBaseService,\n  CollectionBaseService,\n  DataClassBaseService,\n  DirectoryBaseService,\n  EntityBaseService,\n  MediaBaseService\n}; \n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/node.ts","import CatalogBusiness from './business/catalog-business';\nimport DirectoryBusiness from './business/directory-business';\nimport Entity from './presentation/entity';\nimport Collection from './presentation/collection';\nimport HttpClient from './data-access/http/http-client';\nimport Catalog from './presentation/catalog';\nimport BrowserHttpClient from './data-access/http/browser-http-client';\nimport NodeHttpClient from './data-access/http/node-http-client';\n\nconst packageOptions: any = require('../package.json');\n\nexport interface IDirectory {\n  login(username: string, password: string, duration?: number): Promise<boolean>;\n  logout(): Promise<boolean>;\n  getCurrentUser(): Promise<any>;\n  getCurrentUserBelongsTo(groupName: string): Promise<boolean>;\n}\n\nexport interface IHelper {\n  isEntity(object: any): boolean;\n  isCollection(object: any): boolean;\n}\n\nclass WakandaClient {\n\n  public static HttpClient: typeof BrowserHttpClient|typeof NodeHttpClient;\n\n  public _httpClient: HttpClient;\n  public directory: IDirectory;\n  public helper: IHelper;\n  public catalog: string;\n\n  constructor(params: {host?: string, catalog?: string}|any) {\n    let host = typeof(params) === 'object' ? params.host : undefined;\n    let catalog = typeof(params) === 'object' ? params.catalog : undefined;\n\n    this._httpClient = new WakandaClient.HttpClient({\n      apiPrefix: (host || '')\n    });\n\n    this.catalog = catalog;\n\n    let directoryBusiness = new DirectoryBusiness({\n      wakJSC: this\n    });\n\n    this.directory = {\n      login: (username, password, duration) => {\n        return directoryBusiness.login(username, password, duration);\n      },\n      logout: () => {\n        return directoryBusiness.logout();\n      },\n      getCurrentUser: () => {\n        return directoryBusiness.getCurrentUser();\n      },\n      getCurrentUserBelongsTo: (group) => {\n        return directoryBusiness.getCurrentUserBelongsTo(group);\n      }\n    };\n\n    this.helper = {\n      isEntity: object => {\n        return object instanceof Entity;\n      },\n      isCollection: object => {\n        return object instanceof Collection;\n      }\n    };\n  }\n\n  public getCatalog(dataClasses?: string[]): Promise<Catalog> {\n    let catalogBusiness = new CatalogBusiness({\n      wakJSC: this\n    });\n\n    return catalogBusiness.get(dataClasses);\n  }\n\n  public version(): string {\n    return packageOptions.version;\n  }\n}\n\nexport default WakandaClient;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/wakanda-client.ts","import AbstractBusiness from './abstract-business';\nimport CatalogService from '../data-access/service/catalog-service';\nimport Catalog from '../presentation/catalog';\nimport {DataClass, Attribute, AttributeRelated, AttributeCollection} from '../presentation/dataclass';\nimport DataClassBusiness from './dataclass-business';\n\nexport interface IDataClassDBO {\n  name: string;\n  collectionName: string;\n  dataURI: string;\n  attributes: {\n    name: string,\n    type: string,\n    kind: string,\n    readOnly: boolean,\n    simpleDate: boolean\n  }[];\n  methods: {\n    name: string,\n    applyTo: string\n  }[];\n}\n\nclass CatalogBusiness extends AbstractBusiness {\n\n  private service: CatalogService;\n  private seenDataClasses: string[];\n\n  constructor(obj: any) {\n    super(obj);\n\n    this.service = new CatalogService({\n      wakJSC: this.wakJSC\n    });\n  }\n\n  private needDataClass(dcName: string) {\n    if (this.seenDataClasses.indexOf(dcName) === -1) {\n      this.seenDataClasses.push(dcName);\n    }\n  }\n\n  public get(dataClasses?: string[]): Promise<Catalog> {\n\n    this.seenDataClasses = [];\n\n    return this.service.get(dataClasses).then((dataClassDBOArray: IDataClassDBO[]) => {\n\n      let dcArray: DataClass[] = [];\n\n      for (let dcDBO of dataClassDBOArray) {\n        let attributes: Attribute[] = [];\n\n        for (let attr of dcDBO.attributes) {\n          switch (attr.kind) {\n            case 'relatedEntity':\n              attributes.push(new AttributeRelated({\n                name: attr.name,\n                type: attr.type,\n                kind: attr.kind\n              }));\n              this.needDataClass(attr.type);\n              break;\n            case 'storage':\n            case 'calculated':\n            case 'alias':\n              let readOnly = attr.readOnly || (attr.type === 'image' || attr.type === 'blob');\n              let simpleDate = attr.simpleDate !== undefined ? attr.simpleDate : undefined;\n              attributes.push(new Attribute({\n                name: attr.name,\n                type: attr.type,\n                readOnly,\n                kind: attr.kind,\n                simpleDate: simpleDate\n              }));\n              break;\n            case 'relatedEntities':\n              let entityType: string;\n              dataClassDBOArray.some((_dataClass) => {\n                if (_dataClass.collectionName === attr.type) {\n                  entityType = _dataClass.name;\n                  return true;\n                }\n              });\n              let attrCollection = new AttributeCollection({\n                name: attr.name,\n                type: attr.type,\n                kind: attr.kind,\n                entityType: entityType\n              });\n              attributes.push(attrCollection);\n              this.needDataClass(attrCollection.entityType);\n              break;\n            default:\n              throw new Error('[WakandaClient] Unhandled ' + attr.kind + ' attribute type');\n          }\n        }\n\n        let methods: {\n          entity: string[],\n          collection: string[],\n          dataClass: string[]\n        } = {\n          entity: [],\n          collection: [],\n          dataClass: []\n        };\n\n        for (let method of dcDBO.methods) {\n          switch (method.applyTo) {\n            case 'entity':\n              methods.entity.push(method.name);\n              break;\n            case 'entityCollection':\n              methods.collection.push(method.name);\n              break;\n            case 'dataClass':\n              methods.dataClass.push(method.name);\n              break;\n            default:\n              throw new Error('[WakandaClient] Unrecognized ' + method.applyTo + ' method type');\n          }\n        }\n\n        let dataClass = new DataClass({\n          name: dcDBO.name,\n          collectionName: dcDBO.collectionName,\n          attributes,\n          methods\n        });\n\n        //Binding framework methods to the dataclass\n        let dataClassBusiness = new DataClassBusiness({\n          wakJSC: this.wakJSC,\n          dataClass,\n          methods,\n          dataURI: dcDBO.dataURI\n        });\n        dataClassBusiness._decorateDataClass();\n\n        dcArray.push(dataClass);\n      }\n\n      let catalog = new Catalog({\n        dataClasses: dcArray\n      });\n\n      //Check if we have all needed dataClasses on the catalog\n      for (let dcName of this.seenDataClasses) {\n        if (!catalog[dcName]) {\n          throw new Error('Needed ' + dcName + ' dataClass is not present on catalog');\n        }\n      }\n\n      return catalog;\n    });\n  }\n}\n\nexport default CatalogBusiness;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/business/catalog-business.ts","import AbstractService from './abstract-service';\nimport {IDataClassDBO} from '../../business/catalog-business';\nimport {CatalogBaseService} from './base/catalog-base-service';\n\nclass CatalogService extends AbstractService {\n\n  public get(dataClasses?: string| string[]): Promise<IDataClassDBO[]> {\n    return CatalogBaseService.get({\n      httpClient: this.httpClient,\n      dataClasses,\n      catalog: this.wakJSC.catalog\n    });\n  }\n}\n\nexport default CatalogService;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/data-access/service/catalog-service.ts","import {DataClass} from './dataclass';\n\nclass Catalog {\n\n  [key: string]: DataClass;\n\n  constructor({dataClasses}: {dataClasses: DataClass[]}) {\n    for (let dc of dataClasses) {\n      this[dc.name] = dc;\n    }\n  }\n}\n\nexport default Catalog;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/presentation/catalog.ts","import AbstractBusiness from './abstract-business';\nimport EntityBusiness from './entity-business';\nimport DataClassService from '../data-access/service/dataclass-service';\nimport CollectionBusiness from './collection-business';\nimport MediaBusiness from './media-business';\nimport Entity from '../presentation/entity';\nimport Collection from '../presentation/collection';\nimport {AttributeRelated, AttributeCollection} from '../presentation/dataclass';\nimport Media from '../presentation/media';\nimport Const from '../const';\nimport {ICollectionDBO} from './collection-business';\nimport {DataClass} from '../presentation/dataclass';\nimport {QueryOption} from '../presentation/query-option';\nimport {IEntityDBO} from './entity-business';\nimport {MethodAdapter} from './method-adapter';\nimport WakandaClient from '../wakanda-client';\nimport Util from './util';\n\n\n//This map stores all DataClassBusiness instances of existing dataClasses\nlet _dataClassBusinessMap = new Map<string, DataClassBusiness>();\n\nexport interface IMethodsArray {\n  entity: string[];\n  collection: string[];\n  dataClass: string[];\n}\n\nclass DataClassBusiness extends AbstractBusiness {\n\n  public dataClass: DataClass;\n  public methods: IMethodsArray;\n  public _dataClassBusinessMap: Map<string, DataClassBusiness>;\n  public dataURI: string;\n\n  private service: DataClassService;\n\n  constructor({wakJSC, dataClass, methods, dataURI}:\n  {wakJSC: WakandaClient, dataClass: DataClass, methods: IMethodsArray, dataURI: string}) {\n    super({wakJSC});\n\n    this.dataClass = dataClass;\n    this.methods = methods;\n    this.service = new DataClassService({\n      wakJSC: this.wakJSC,\n      dataClassBusiness: this\n    });\n    this.dataURI = dataURI;\n\n    _dataClassBusinessMap.set(dataClass.name, this);\n    this._dataClassBusinessMap = _dataClassBusinessMap;\n  }\n\n  public _decorateDataClass() {\n    //Do not forget to bind(this) to have \"this\" pointing on business instance\n    //instead of given dataclass instance\n    this.dataClass.find    = this.find.bind(this);\n    this.dataClass.query   = this.query.bind(this);\n    this.dataClass.create  = this.create.bind(this);\n\n    this._addUserDefinedMethods();\n  }\n\n  private _addUserDefinedMethods() {\n    let self = this;\n\n    this.methods.dataClass.forEach(method => {\n      //Voluntary don't use fat arrow notation to use arguments object without a bug\n      this.dataClass[method] = function() {\n        let params = Array.from(arguments);\n        return self.callMethod(method, params);\n      };\n    });\n  }\n\n  public callMethod(methodName: string, parameters: any[]): Promise<Entity|Collection|any> {\n    return this.service.callMethod(methodName, parameters)\n      .then(obj => {\n        return MethodAdapter.transform(obj, this._dataClassBusinessMap);\n      });\n  }\n\n  public find(id: string|number, options?: QueryOption): Promise<Entity> {\n    let opt = options || {};\n\n    if (opt.filter !== undefined || opt.params !== undefined || opt.pageSize !== undefined ||\n      opt.start !== undefined || opt.orderBy !== undefined) {\n      throw new Error('Dataclass.find: options filter, params, pageSize, start and orderBy are not allowed');\n    }\n\n    return this.service.find(id, opt).then(entity => {\n      return this._presentationEntityFromDbo({\n        dbo: entity\n      });\n    });\n  }\n\n  public query(options?: QueryOption): Promise<Collection> {\n    let opt = options || {};\n    let initialSelect = opt.select;\n\n    if (opt.method && opt.method.length > 0) {\n      throw new Error('Dataclass.query: option method is not allowed');\n    }\n\n    if (!opt.pageSize) {\n      opt.pageSize = Const.DEFAULT_PAGE_SIZE;\n    }\n\n    return this.service.query(opt).then(collection => {\n      return this._presentationCollectionFromDbo({\n        dbo: collection,\n        pageSize: opt.pageSize,\n        initialSelect\n      });\n    });\n  }\n\n  public create(pojo?: any): Entity {\n    let entityToAttach: any = {};\n\n    if (pojo) {\n      for (let prop in pojo) {\n        if (pojo[prop] instanceof Entity) {\n          entityToAttach[prop] = pojo[prop];\n          delete pojo[prop];\n        }\n      }\n    }\n\n    let entity = this._presentationEntityFromDbo({\n      dbo: pojo || {}\n    });\n\n    for (let prop in entityToAttach) {\n      if (Object.prototype.hasOwnProperty.call(entityToAttach, prop)) {\n        entity[prop] = entityToAttach[prop];\n      }\n    }\n\n    return entity;\n  }\n\n  private _createEntity({key, deferred, dbo}: {key: string, deferred?: boolean, dbo?: IEntityDBO}): Entity {\n\n    let entity = new Entity({\n      key,\n      deferred,\n      dataClass: this.dataClass\n    });\n    let business = new EntityBusiness({\n      wakJSC: this.wakJSC,\n      dataClass: this.dataClass,\n      entity,\n      dataClassBusiness: this\n    });\n    business._decorateEntity();\n\n    if (!deferred) {\n      this._populateEntityDataFromDbo({\n        dbo: dbo,\n        entity: entity\n      });\n      business._flashEntityValues();\n    }\n    return entity;\n  }\n\n  private _createCollection({uri, deferred, pageSize, initialSelect}:\n    {uri: string, deferred?: boolean, pageSize?: number, initialSelect?: string}): Collection {\n\n    let collection = new Collection({\n        deferred: deferred,\n        dataClass: this.dataClass\n      });\n    let business = new CollectionBusiness({\n      wakJSC: this.wakJSC,\n      dataClass: this.dataClass,\n      dataClassBusiness: this,\n      collection,\n      collectionUri: uri,\n      pageSize,\n      initialSelect\n    });\n    business._decorateCollection();\n\n    return collection;\n  }\n\n  public _createMedia({uri, isImage, attributeName, entity}:\n   {uri: string, isImage: boolean, attributeName: string, entity: Entity}): Media {\n\n    let media = new Media({uri});\n    let business = new MediaBusiness({\n      wakJSC: this.wakJSC,\n      media,\n      dataClassBusiness: this,\n      isImage,\n      attributeName,\n      entity\n    });\n\n    business._decorateMedia();\n\n    return media;\n  }\n\n  private _populateEntityDataFromDbo({dbo, entity}: {dbo: IEntityDBO, entity: Entity}): Entity {\n      entity._stamp = dbo.__STAMP;\n      for (let attr of this.dataClass.attributes) {\n\n        let dboAttribute = dbo[attr.name];\n\n        if (dboAttribute !== null && dboAttribute !== undefined) {\n          if (attr instanceof AttributeRelated) {\n            //Kind of recursive call with a potententialy different instance of\n            //DataClassBusiness\n            let business = _dataClassBusinessMap.get(attr.type);\n            entity[attr.name] = business._presentationEntityFromDbo({\n              dbo: dboAttribute\n            });\n          }\n          else if (attr instanceof AttributeCollection) {\n            let business = _dataClassBusinessMap.get(attr.entityType);\n            entity[attr.name] = business._presentationCollectionFromDbo({\n              dbo: dboAttribute\n            });\n          }\n          else if (attr.type === 'image' || attr.type === 'blob') {\n            let uri: string;\n\n            if (dboAttribute && dboAttribute.__deferred && dboAttribute.__deferred.uri) {\n              uri = dboAttribute.__deferred.uri;\n            }\n            else {\n              uri = null;\n            }\n            entity[attr.name] = this._createMedia({\n              uri,\n              isImage: attr.type === 'image',\n              attributeName: attr.name,\n              entity\n            });\n          }\n          else if (attr.type === 'date') {\n            if (!dboAttribute) {\n              entity[attr.name] = null;\n            } else {\n              entity[attr.name] = attr.simpleDate ? Util.wakParseSimpleDate(dboAttribute) : new Date(dboAttribute);\n            }\n          }\n          else {\n            entity[attr.name] = dboAttribute;\n          }\n        }\n        else {\n          //Even if the property is null, we need a media for this kind of attributes\n          //to handle the upload part\n          if (attr.type === 'image' || attr.type === 'blob') {\n            entity[attr.name] = this._createMedia({\n              uri: null,\n              isImage: attr.type === 'image',\n              attributeName: attr.name,\n              entity\n            });\n          }\n          else {\n            entity[attr.name] = null;\n          }\n        }\n      }\n      return entity;\n  }\n\n  public _presentationEntityFromDbo({dbo}: {dbo: IEntityDBO}): Entity {\n    let entity: Entity;\n\n    if (!dbo) {\n      entity = null;\n    }\n    if (dbo.__deferred) {\n      entity = this._createEntity({\n        key: dbo.__deferred.__KEY,\n        deferred: true\n      });\n    }\n    else {\n      entity = this._createEntity({\n        key: dbo.__KEY,\n        dbo: dbo\n      });\n    }\n\n    return entity;\n  }\n\n  public _presentationCollectionFromDbo({dbo, pageSize, initialSelect}:\n    {dbo: ICollectionDBO, pageSize?: number, initialSelect?: string}): Collection {\n\n    let collection: Collection;\n\n    if (!dbo) {\n      collection = null;\n    }\n    else if (dbo.__deferred) {\n      collection = this._createCollection({\n        deferred: true,\n        uri: dbo.__deferred.uri\n      });\n    }\n    else {\n      collection = this._createCollection({\n        uri: dbo.__ENTITYSET,\n        pageSize: pageSize || dbo.__ENTITIES.length,\n        initialSelect\n      });\n      collection._count     = dbo.__COUNT;\n      collection._first     = dbo.__FIRST;\n      collection._sent      = dbo.__SENT;\n      collection._pageSize  = pageSize;\n\n      for (let dboEntity of dbo.__ENTITIES) {\n        collection.entities.push(this._presentationEntityFromDbo({\n          dbo: dboEntity\n        }));\n      }\n    }\n\n    return collection;\n  }\n}\n\nexport default DataClassBusiness;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/business/dataclass-business.ts","import AbstractBusiness from './abstract-business';\nimport EntityService from '../data-access/service/entity-service';\nimport {AttributeRelated, AttributeCollection} from '../presentation/dataclass';\nimport Entity from '../presentation/entity';\nimport {DataClass} from '../presentation/dataclass';\nimport DataClassBusiness from './dataclass-business';\nimport {QueryOption} from '../presentation/query-option';\nimport {MethodAdapter} from './method-adapter';\nimport WakandaClient from '../wakanda-client';\nimport Media from '../presentation/media';\nimport Util from './util';\n\n\nexport interface IEntityDBO {\n  __KEY?: string;\n  __STAMP?: number;\n  __deferred?: {uri: string, __KEY: string};\n\n  [key: string]: any;\n}\n\nclass EntityBusiness extends AbstractBusiness {\n\n  private entity: Entity;\n  private dataClass: DataClass;\n  private dataClassBusiness: DataClassBusiness;\n  private service: EntityService;\n  private _oldEntityValues: IEntityDBO;\n\n  constructor({wakJSC, entity, dataClass, dataClassBusiness}:\n  {wakJSC: WakandaClient, entity: Entity, dataClass: DataClass, dataClassBusiness: DataClassBusiness}) {\n    super({wakJSC});\n\n    this.entity = entity;\n    this.dataClass = dataClass;\n    this.dataClassBusiness = dataClassBusiness;\n    this.service = new EntityService({\n      wakJSC,\n      entity,\n      dataClassBusiness\n    });\n  }\n\n  public _decorateEntity() {\n    this.entity.save        = this.save.bind(this);\n    this.entity.delete      = this.delete.bind(this);\n    this.entity.fetch       = this.fetch.bind(this);\n    this.entity.recompute   = this.recompute.bind(this);\n\n    this._addUserDefinedMethods();\n  }\n\n  public _flashEntityValues(): void {\n    let data: IEntityDBO = {};\n    let entity = this.entity;\n\n    for (let attr of this.dataClass.attributes) {\n      let objAttr = entity[attr.name];\n\n      if (attr instanceof AttributeCollection) {\n        continue;\n      }\n\n      if (attr instanceof AttributeRelated) {\n        data[attr.name] = objAttr ? objAttr._key : null;\n      } else {\n        switch (attr.type) {\n          case 'image':\n          case 'blob':\n            data[attr.name] = { uri: objAttr.uri };\n            break;\n          case 'object':\n            data[attr.name] = JSON.stringify(objAttr);\n            break;\n          case 'date':\n            if (!objAttr) {\n              data[attr.name] = null;\n            } else {\n              data[attr.name] = attr.simpleDate ? Util.wakToStringSimpleDate(objAttr) : objAttr.toJSON();\n            }\n            break;\n          default:\n            data[attr.name] = objAttr;\n        }\n      }\n    }\n\n    this._oldEntityValues = data;\n  }\n\n  private _addUserDefinedMethods() {\n    let self = this;\n    this.dataClassBusiness.methods.entity.forEach(method => {\n      //Voluntary don't use fat arrow notation to use arguments object without a bug\n      this.entity[method] = function() {\n        let params = Array.from(arguments);\n        return self.callMethod(method, params);\n      };\n    });\n  }\n\n  public fetch(options?: QueryOption): Promise<Entity> {\n    let opt = options || {};\n\n    if (opt.filter !== undefined || opt.params !== undefined || opt.pageSize !== undefined ||\n      opt.start !== undefined || opt.orderBy !== undefined) {\n      throw new Error('Entity.fetch: options filter, params, pageSize, start and orderBy are not allowed');\n    }\n\n    return this.dataClassBusiness.find(this.entity._key, options).then(fresherEntity => {\n      this._refreshEntity({fresherEntity});\n      this._flashEntityValues();\n      return this.entity;\n    });\n  }\n\n  public callMethod(methodName: string, parameters: any[]): Promise<any> {\n    if (!this.entity._key) {\n      throw new Error('Entity.' + methodName + ': can not be called on an unsaved entity');\n    }\n\n    return this.service.callMethod(methodName, parameters)\n    .then(obj => {\n\n      return MethodAdapter.transform(obj, this.dataClassBusiness._dataClassBusinessMap);\n    });\n  }\n\n  public delete(): Promise<void> {\n    if (!this.entity._key) {\n      throw new Error('Entity.delete: can not delete unsaved entity');\n    }\n\n    return this.service.delete().then(() => {\n      this.entity = null;\n    });\n  }\n\n  public save(): Promise<Entity> {\n    let data = this.prepareDataForSave();\n\n    //If first-level related entities were already expanded, we will save the\n    //entity and ask the server to expand theses attributes on its response\n    //So, the user keeps its entities expanded\n    let expand = this._getExpandString();\n\n    return this.service.save(data, expand).then(entityDbo => {\n      let fresherEntity = this.dataClassBusiness._presentationEntityFromDbo({\n        dbo: entityDbo\n      });\n\n      this._refreshEntity({fresherEntity});\n      this._flashEntityValues();\n      return this.entity;\n    });\n  }\n\n  public recompute(): Promise<Entity> {\n    let data = this.prepareDataForSave();\n\n    return this.service.recompute(data)\n      .then(dbo => {\n        let fresherEntity = this.dataClassBusiness._presentationEntityFromDbo({\n          dbo\n        });\n\n        this._refreshEntity({fresherEntity});\n        return this.entity;\n      });\n  }\n\n  private prepareDataForSave(): IEntityDBO {\n    let data: IEntityDBO = {};\n    let entityIsNew = false;\n\n    if (this.entity._key && this.entity._stamp) {\n      data.__KEY   = this.entity._key;\n      data.__STAMP = this.entity._stamp;\n    }\n    else {\n      entityIsNew = true;\n    }\n\n    for (let attr of this.dataClass.attributes) {\n      let objAttr = this.entity[attr.name];\n\n      if (objAttr === undefined) {\n        objAttr = null;\n      }\n\n      if (attr instanceof AttributeRelated) {\n        data[attr.name] = objAttr ? objAttr._key : null;\n      }\n      else if (attr.readOnly) {\n        continue;\n      }\n      else if (attr.type === 'date') {\n        if (! objAttr) {\n          data[attr.name] = objAttr;\n        } else {\n          data[attr.name] = attr.simpleDate ? Util.wakToStringSimpleDate(objAttr) : objAttr.toJSON();\n        }\n      }\n      else if (!(attr instanceof AttributeCollection)) {\n        //Don't send null value for a newly created attribute (to don't override value eventually set on init event)\n        //except for ID (which is null), because if an empty object is send, save is ignored\n        if (!entityIsNew || objAttr !== null || attr.name === 'ID') {\n          data[attr.name] = objAttr;\n        }\n      }\n    }\n\n    if (!entityIsNew) {\n      let oldData = this._oldEntityValues || {};\n      for (let attr of this.dataClass.attributes) {\n        if (data[attr.name] === undefined || attr.name === 'ID') {\n          continue;\n        }\n\n        switch (attr.type) {\n          case 'image':\n          case 'blob':\n            if (data[attr.name].uri === oldData[attr.name].uri) {\n              delete data[attr.name];\n            }\n            break;\n          case 'object':\n            if (JSON.stringify(data[attr.name]) === oldData[attr.name]) {\n              delete data[attr.name];\n            }\n            break;\n          default:\n            if (data[attr.name] === oldData[attr.name]) {\n              delete data[attr.name];\n            }\n        }\n      }\n    }\n\n    return data;\n  }\n\n  private _refreshEntity({fresherEntity}: {fresherEntity: Entity}) {\n    for (let prop in fresherEntity) {\n      if (fresherEntity.hasOwnProperty(prop) && (typeof fresherEntity[prop] !== 'function')) {\n        if (fresherEntity[prop] instanceof Media) {\n          this.entity[prop].uri = fresherEntity[prop].uri;\n        } else {\n          this.entity[prop] = fresherEntity[prop];\n        }\n      }\n    }\n  }\n\n  private _getExpandString(): string {\n    let expand = '';\n    for (let attr of this.dataClass.attributes) {\n      if (attr instanceof AttributeRelated || attr instanceof AttributeCollection) {\n        if (this.entity[attr.name] instanceof Entity && !this.entity[attr.name]._deferred) {\n          expand += attr.name + ',';\n        }\n      }\n    }\n\n    return expand.length > 0 ? expand.slice(0, -1) : null;\n  }\n}\n\nexport default EntityBusiness;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/business/entity-business.ts","import AbstractService from './abstract-service';\nimport Entity from '../../presentation/entity';\nimport DataClassBusiness from '../../business/dataclass-business';\nimport {IEntityDBO} from '../../business/entity-business';\nimport {EntityBaseService} from './base/entity-base-service';\nimport WakandaClient from '../../wakanda-client';\n\nclass EntityService extends AbstractService {\n\n  private entity: Entity;\n  private dataClassBusiness: DataClassBusiness;\n\n  constructor({wakJSC, entity, dataClassBusiness}:\n  {wakJSC: WakandaClient, entity: Entity, dataClassBusiness: DataClassBusiness}) {\n    super({wakJSC});\n\n    this.entity = entity;\n    this.dataClassBusiness = dataClassBusiness;\n  }\n\n  public save(data: IEntityDBO, expand: string) {\n    return EntityBaseService.save({\n      httpClient: this.httpClient,\n      dataURI: this.dataClassBusiness.dataURI,\n      expand,\n      data\n    });\n  }\n\n  public recompute(data: IEntityDBO) {\n   return EntityBaseService.recompute({\n      httpClient: this.httpClient,\n      dataURI: this.dataClassBusiness.dataURI,\n      data\n    });\n  }\n\n  public callMethod(methodName: string, parameters: any[]) {\n    return EntityBaseService.callMethod({\n      httpClient: this.httpClient,\n      dataURI: this.dataClassBusiness.dataURI,\n      methodName,\n      parameters,\n      entityKey: this.entity._key\n    });\n  }\n\n  public delete() {\n    return EntityBaseService.delete({\n      httpClient: this.httpClient,\n      dataURI: this.dataClassBusiness.dataURI,\n      entityKey: this.entity._key\n    });\n  }\n}\n\nexport default EntityService;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/data-access/service/entity-service.ts","import AbstractService from './abstract-service';\nimport {QueryOption} from '../../presentation/query-option';\nimport DataClassBusiness from '../../business/dataclass-business';\nimport {IEntityDBO} from '../../business/entity-business';\nimport {ICollectionDBO} from '../../business/collection-business';\nimport {DataClassBaseService} from './base/dataclass-base-service';\nimport WakandaClient from '../../wakanda-client';\n\nclass DataClassService extends AbstractService {\n\n  private dataClassBusiness: DataClassBusiness;\n\n  constructor({wakJSC, dataClassBusiness}: {wakJSC: WakandaClient, dataClassBusiness: DataClassBusiness}) {\n    super({wakJSC});\n\n    this.dataClassBusiness = dataClassBusiness;\n  }\n\n  public find(id: string|number, options: QueryOption): Promise<IEntityDBO> {\n    return DataClassBaseService.find({\n      httpClient: this.httpClient,\n      key: id,\n      options,\n      dataURI: this.dataClassBusiness.dataURI\n    });\n  }\n\n  public query(options: QueryOption): Promise<ICollectionDBO> {\n    return DataClassBaseService.query({\n      httpClient: this.httpClient,\n      options,\n      dataURI: this.dataClassBusiness.dataURI\n    });\n  }\n\n  public callMethod(methodName: string, parameters: any[]): Promise<any> {\n    return DataClassBaseService.callMethod({\n      httpClient: this.httpClient,\n      dataURI: this.dataClassBusiness.dataURI,\n      methodName,\n      parameters\n    });\n  }\n}\n\nexport default DataClassService;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/data-access/service/dataclass-service.ts","import AbstractBusiness from './abstract-business';\nimport CollectionService from '../data-access/service/collection-service';\nimport Const from '../const';\nimport {IEntityDBO} from './entity-business';\nimport Collection from '../presentation/collection';\nimport {DataClass} from '../presentation/dataclass';\nimport DataClassBusiness from './dataclass-business';\nimport {QueryOption} from '../presentation/query-option';\nimport {MethodAdapter} from './method-adapter';\nimport WakandaClient from '../wakanda-client';\n\nexport interface ICollectionDBO {\n  __ENTITYSET: string;\n  __COUNT: number;\n  __FIRST: number;\n  __SENT: number;\n  __ENTITIES: IEntityDBO[];\n  __deferred: {uri: string};\n\n  [key: string]: any;\n}\n\nexport interface ICollectionBusinessConstructor {\n  wakJSC: WakandaClient;\n  dataClass: DataClass;\n  collection: Collection;\n  dataClassBusiness: DataClassBusiness;\n  collectionUri: string;\n  pageSize: number;\n  initialSelect: string;\n}\n\nclass CollectionBusiness extends AbstractBusiness {\n\n  private collection: Collection;\n  private dataClass: DataClass;\n  private dataClassBusiness: DataClassBusiness;\n  private service: CollectionService;\n  private pageSize: number;\n  private initialSelect: string;\n\n  constructor({wakJSC, dataClass, collection, dataClassBusiness, collectionUri, pageSize, initialSelect}: ICollectionBusinessConstructor) {\n    super({wakJSC});\n\n    this.collection = collection;\n    this.dataClass = dataClass;\n    this.dataClassBusiness = dataClassBusiness;\n    this.service = new CollectionService({\n      wakJSC,\n      collection,\n      dataClassBusiness,\n      collectionUri\n    });\n    this.pageSize = pageSize;\n    this.initialSelect = initialSelect;\n  }\n\n  public _decorateCollection() {\n    this.collection.fetch = this.fetch.bind(this);\n    this.collection.nextPage = this.nextPage.bind(this);\n    this.collection.prevPage = this.prevPage.bind(this);\n    this.collection.more = this.more.bind(this);\n\n    this._addUserDefinedMethods();\n  }\n\n  public fetch(options?: QueryOption): Promise<Collection> {\n    let opt = options || {};\n\n    if (opt.method && opt.method.length > 0) {\n      throw new Error('Collection.fetch: option method is not allowed');\n    }\n\n    if (!opt.pageSize) {\n      opt.pageSize = this.pageSize ? this.pageSize : Const.DEFAULT_PAGE_SIZE;\n    }\n\n    if (opt.select) {\n      this.initialSelect = opt.select;\n    }\n\n    this.pageSize = opt.pageSize;\n\n    return this.service.fetch(opt).then(collectionDBO => {\n      let fresherCollection = this.dataClassBusiness._presentationCollectionFromDbo({\n        dbo: collectionDBO,\n        pageSize: this.pageSize\n      });\n\n      this._refreshCollection({fresherCollection});\n      return this.collection;\n    });\n  }\n\n  public more(): Promise<Collection> {\n\n    if (this.collection._deferred === true) {\n      throw new Error('Collection.more: can not call more on a deferred collection');\n    }\n\n    let options: QueryOption = {\n      start: this.collection._first + this.collection._sent,\n      pageSize: this.pageSize\n    };\n\n    if (this.initialSelect) {\n      options.select = this.initialSelect;\n    }\n\n    return this.service.fetch(options)\n      .then(dbo => {\n        this.collection._sent += dbo.__ENTITIES.length;\n\n        for (let entity of dbo.__ENTITIES) {\n          this.collection.entities.push(this.dataClassBusiness._presentationEntityFromDbo({\n            dbo: entity\n          }));\n        }\n\n        return this.collection;\n      });\n  }\n\n  public nextPage(): Promise<Collection> {\n\n    if (this.collection._deferred === true) {\n      throw new Error('Collection.nextPage: can not call nextPage on a deferred collection');\n    }\n\n    let options: QueryOption = {\n      start: this.collection._first + this.pageSize,\n      pageSize: this.pageSize\n    };\n\n    if (this.initialSelect) {\n      options.select = this.initialSelect;\n    }\n\n    return this.fetch(options);\n  }\n\n  public prevPage(): Promise<Collection> {\n\n    if (this.collection._deferred === true) {\n      throw new Error('Collection.prevPage: can not call prevPage on a deferred collection');\n    }\n\n    let options: QueryOption = {\n      start: this.collection._first - this.pageSize,\n      pageSize: this.pageSize\n    };\n\n    if (this.initialSelect) {\n      options.select = this.initialSelect;\n    }\n\n    return this.fetch(options);\n  }\n\n  private _addUserDefinedMethods() {\n    let self = this;\n    this.dataClassBusiness.methods.collection.forEach(method => {\n      //Voluntary don't use fat arrow notation to use arguments object without a bug\n      this.collection[method] = function() {\n        let params = Array.from(arguments);\n        return self.callMethod(method, params);\n      };\n    });\n  }\n\n  public callMethod(methodName: string, parameters: any[]) {\n    if (this.collection._deferred) {\n      throw new Error('Collection.' + methodName + ': can not be called on a deferred collection');\n    }\n\n    return this.service.callMethod(methodName, parameters)\n      .then((obj: any) => {\n        return MethodAdapter.transform(obj, this.dataClassBusiness._dataClassBusinessMap);\n      });\n  }\n\n  private _refreshCollection({fresherCollection}: {fresherCollection: Collection}) {\n    for (let prop in fresherCollection) {\n      if (Object.prototype.hasOwnProperty.call(fresherCollection, prop)) {\n        if (typeof fresherCollection[prop] !== 'function') {\n          this.collection[prop] = fresherCollection[prop];\n        }\n      }\n    }\n  }\n}\n\nexport default CollectionBusiness;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/business/collection-business.ts","import AbstractService from './abstract-service';\nimport Collection from '../../presentation/collection';\nimport DataClassBusiness from '../../business/dataclass-business';\nimport {QueryOption} from '../../presentation/query-option';\nimport {ICollectionDBO} from '../../business/collection-business';\nimport {CollectionBaseService, isEntitySetUri} from './base/collection-base-service';\nimport WakandaClient from '../../wakanda-client';\n\nclass CollectionService extends AbstractService {\n\n  private collection: Collection;\n  private dataClassBusiness: DataClassBusiness;\n  private collectionUri: string;\n  private isEntitySet: boolean;\n\n  constructor({wakJSC, collection, dataClassBusiness, collectionUri}:\n    {wakJSC: WakandaClient, collection: Collection, dataClassBusiness: DataClassBusiness, collectionUri: string}) {\n    super({wakJSC});\n\n    this.collection = collection;\n    this.dataClassBusiness = dataClassBusiness;\n    this.collectionUri = collectionUri;\n    this.isEntitySet = isEntitySetUri(collectionUri);\n  }\n\n  public fetch(options: QueryOption): Promise<ICollectionDBO> {\n\n    return CollectionBaseService.fetch({\n      httpClient: this.httpClient,\n      collectionUri: this.collectionUri,\n      isEntitySet: this.isEntitySet,\n      options\n    })\n      .then(dbo => {\n\n        if (dbo.__ENTITYSET) {\n          this.collectionUri = dbo.__ENTITYSET;\n          this.isEntitySet = isEntitySetUri(dbo.__ENTITYSET);\n        }\n\n        return dbo;\n      });\n  }\n\n\n  public callMethod(methodName: string, parameters: any[]): Promise<any> {\n    return CollectionBaseService.callMethod({\n      httpClient: this.httpClient,\n      collectionUri: this.collectionUri,\n      isEntitySet: this.isEntitySet,\n      methodName,\n      parameters\n    });\n  }\n}\n\nexport default CollectionService;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/data-access/service/collection-service.ts","import AbstractBusiness from './abstract-business';\nimport MediaService from '../data-access/service/media-service';\nimport Media from '../presentation/media';\nimport Entity from '../presentation/entity';\nimport DataClassBusiness from './dataclass-business';\nimport WakandaClient from '../wakanda-client';\n\nclass MediaBusiness extends AbstractBusiness {\n\n  public entity: Entity;\n  public isImage: boolean;\n\n  private media: Media;\n  private dataClassBusiness: DataClassBusiness;\n  private service: MediaService;\n\n  constructor({wakJSC, media, dataClassBusiness, isImage, attributeName, entity}:\n  {wakJSC: WakandaClient, media: Media, dataClassBusiness: DataClassBusiness, isImage: boolean, attributeName: string, entity: Entity}) {\n    super({wakJSC});\n\n    this.media = media;\n    this.entity = entity;\n    this.dataClassBusiness = dataClassBusiness;\n    this.isImage = isImage === true;\n    this.service = new MediaService({\n      wakJSC,\n      mediaBusiness: this,\n      media,\n      attributeName,\n      dataClassBusiness\n    });\n  }\n\n  public _decorateMedia() {\n    this.media.upload = this.upload.bind(this);\n    this.media.delete = this.delete.bind(this);\n  }\n\n  public upload(file: any): Promise<Entity> {\n\n    if (!this.entity._key) {\n      throw new Error('Media.upload: entity must be saved before uploading a media');\n    }\n\n    return this.service.upload(file, file.type).then(dbo => {\n      return dbo; //FIXME\n    }).then(() => {\n      //FIXME - crappy, force a refresh of the entity to get proper stamp and media uri\n      return this.entity.fetch();\n    });\n  }\n\n  public delete(): Promise<Entity> {\n\n    if (!this.entity._key) {\n      throw new Error('Media.upload: entity must be saved before deleting a media');\n    }\n\n    return this.service.delete().then(() => {\n      //FIXME - crappy, force a refresh of the entity to get proper stamp and media uri\n      return this.entity.fetch();\n    });\n  }\n}\n\nexport default MediaBusiness;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/business/media-business.ts","import WakandaClient from '../../wakanda-client';\nimport AbstractService from './abstract-service';\nimport Entity from '../../presentation/entity';\nimport Media from '../../presentation/media';\nimport HttpResponse from '../http/http-response';\nimport {MediaBaseService} from './base/media-base-service';\nimport MediaBusiness from '../../business/media-business';\nimport DataClassBusiness from '../../business/dataclass-business';\n\nclass MediaService extends AbstractService {\n\n  private dataClassName: string;\n  private entity: Entity;\n  private isImage: boolean;\n  private media: Media;\n  private attributeName: string;\n  private dataURI: string;\n\n  constructor({wakJSC, mediaBusiness, media, attributeName, dataClassBusiness}:\n    {wakJSC: WakandaClient, mediaBusiness: MediaBusiness, media: Media, attributeName: string, dataClassBusiness: DataClassBusiness}) {\n\n    super({wakJSC});\n\n    this.dataClassName = dataClassBusiness.dataClass.name;\n    this.dataURI = dataClassBusiness.dataURI;\n    this.entity = mediaBusiness.entity;\n    this.isImage = mediaBusiness.isImage;\n    this.media = media;\n    this.attributeName = attributeName;\n  }\n\n  public upload(file: any, mimeType: string): Promise<HttpResponse> {\n    return MediaBaseService.upload({\n      httpClient: this.httpClient,\n      dataURI: this.dataURI,\n      entityKey: this.entity._key,\n      attributeName: this.attributeName,\n      isImage: this.isImage,\n      file\n    });\n  }\n\n  public delete(): Promise<HttpResponse> {\n    return MediaBaseService.delete({\n      httpClient: this.httpClient,\n      dataURI: this.dataURI,\n      entityKey: this.entity._key,\n      entityStamp: this.entity._stamp,\n      attributeName: this.attributeName\n    });\n  }\n}\n\nexport default MediaService;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/data-access/service/media-service.ts","import WakandaClient from '../wakanda-client';\nimport AbstractBusiness from './abstract-business';\nimport DirectoryService from '../data-access/service/directory-service';\nimport Const from '../const';\n\nexport interface ICurrentUserDBO {\n  userName: string;\n  fullName: string;\n  ID: string|number;\n}\n\nclass DirectoryBusiness extends AbstractBusiness {\n\n  private service: DirectoryService;\n\n  constructor({wakJSC}: {wakJSC: WakandaClient}) {\n    super({wakJSC});\n\n    this.service = new DirectoryService({wakJSC});\n  }\n\n  public login(username: string, password: string, duration?: number): Promise<boolean> {\n\n    let durationTime = duration || Const.DEFAULT_SESSION_DURATION;\n\n    if (!(typeof durationTime === 'number') || durationTime <= 0) {\n      throw new Error('Directory.login: invalid duration parameter');\n    }\n\n    return this.service.login(username, password, durationTime)\n      .catch((result) => {\n        let error = new Error('Directory.login error');\n        error.name = result.statusCode == 401 ? 'UNAUTHORIZED' : 'UNEXPECTED_ERROR';\n        return Promise.reject(error);\n      });\n  }\n\n  public logout(): Promise<boolean> {\n    return this.service.logout()\n      .catch(() => {\n        return Promise.reject(new Error('Directory.logout: logout failed'));\n      });\n  }\n\n  public getCurrentUser(): Promise<ICurrentUserDBO> {\n    return this.service.getCurrentUser()\n      .then(dbo => {\n        return dbo;\n      })\n      .catch(() => {\n        return Promise.reject(new Error('Directory.getCurrentUser: user is not logged in'));\n      });\n  }\n\n  public getCurrentUserBelongsTo(group: string): Promise<boolean> {\n\n    if (!(typeof group === 'string')) {\n      throw new Error('Directory.getCurrentUserBelongsTo: group must be a string');\n    }\n\n    return this.service.getCurrentUserBelongsTo(group)\n      .then(() => {\n        return true;\n      })\n      .catch(() => {\n        return false;\n      });\n  }\n}\n\nexport default DirectoryBusiness;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/business/directory-business.ts","import AbstractService from './abstract-service';\nimport {ICurrentUserDBO} from '../../business/directory-business';\nimport {DirectoryBaseService} from './base/directory-base-service';\n\nclass DirectoryService extends AbstractService {\n\n  public login(username: string, password: string, duration: number): Promise<boolean> {\n    return DirectoryBaseService.login({\n      httpClient: this.httpClient,\n      username,\n      password,\n      duration\n    });\n  }\n\n  public logout(): Promise<boolean> {\n    return DirectoryBaseService.logout({\n      httpClient: this.httpClient\n    });\n  }\n\n  public getCurrentUser(): Promise<ICurrentUserDBO> {\n    return DirectoryBaseService.getCurrentUser({\n      httpClient: this.httpClient\n    });\n  }\n\n  public getCurrentUserBelongsTo(group: string): Promise<boolean> {\n    return DirectoryBaseService.getCurrentUserBelongsTo({\n      httpClient: this.httpClient,\n      group\n    });\n  }\n}\n\nexport default DirectoryService;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/data-access/service/directory-service.ts","module.exports = {\"name\":\"wakanda-client\",\"main\":\"dist/node.js\",\"version\":\"2.3.0\",\"description\":\"Wakanda Client allows you to easily interact with Wakanda Server on a JavaScript (browser or node) environment\",\"browser\":\"browser/wakanda-client.min.js\",\"repository\":\"wakanda/wakanda-javascript-client\",\"scripts\":{\"watch\":\"webpack --progress --colors --watch\",\"build\":\"webpack --progress --colors\",\"test:all\":\"npm run test:karma && npm run test:node\",\"test:karma\":\"karma start\",\"test:node\":\"mocha test/bootstrap.js test/spec/**/*.spec.js\",\"test\":\"node runTests.js\",\"test-server:record\":\"node test/connect/server.js record\",\"serve\":\"concurrently -r \\\"npm run watch\\\" \\\"gulp serve\\\"\",\"tsc\":\"tsc\",\"codecov\":\"cat coverage/*/lcov.info | codecov\"},\"author\":\"Wakanda SAS\",\"license\":\"MIT\",\"devDependencies\":{\"babel-core\":\"^6.26.0\",\"babel-loader\":\"^7.1.2\",\"babel-preset-env\":\"^1.6.1\",\"chai\":\"^4.1.2\",\"chalk\":\"^2.3.0\",\"clean-webpack-plugin\":\"^0.1.17\",\"codecov.io\":\"^0.1.6\",\"concurrently\":\"^3.5.0\",\"connect\":\"^3.6.5\",\"connect-prism\":\"git+https://git@github.com/seglo/connect-prism.git\",\"eslint\":\"^4.11.0\",\"eslint-loader\":\"^1.9.0\",\"gulp\":\"^3.9.1\",\"gulp-connect\":\"^5.0.0\",\"http-proxy-middleware\":\"^0.17.4\",\"istanbul-instrumenter-loader\":\"^3.0.0\",\"karma\":\"^1.7.1\",\"karma-chai\":\"^0.1.0\",\"karma-coverage\":\"^1.1.1\",\"karma-coverage-istanbul-reporter\":\"^1.3.0\",\"karma-mocha\":\"^1.3.0\",\"karma-phantomjs-launcher\":\"^1.0.4\",\"karma-verbose-reporter\":\"0.0.6\",\"lodash\":\"^4.17.4\",\"mocha\":\"^4.0.1\",\"path\":\"^0.12.7\",\"phantomjs-prebuilt\":\"^2.1.16\",\"ts-loader\":\"^3.1.1\",\"tslint\":\"^5.8.0\",\"tslint-loader\":\"^3.5.3\",\"typescript\":\"^2.6.1\",\"webpack\":\"^3.8.1\"},\"dependencies\":{\"core-js\":\"^2.5.1\",\"request\":\"^2.83.0\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./package.json\n// module id = 32\n// module chunks = 0","const request: any = require('request');\n\nimport { HttpClient, IGetRequestOption, IPostRequestOption } from './http-client';\nimport HttpResponse from './http-response';\n\nclass NodeHttpClient extends HttpClient {\n\n  private request: any;\n  private cookieJar: any;\n\n  constructor({ apiPrefix }: { apiPrefix: string }) {\n    super({ apiPrefix });\n\n    this.request = request;\n    this.cookieJar = this.request.jar();\n  }\n\n  public _clearCookie(): void {\n    this.cookieJar = this.request.jar();\n  }\n\n  public get({ uri, params }: IGetRequestOption): Promise<HttpResponse> {\n    try {\n      let res = super.get({ uri, params });\n      if (res !== null) {\n        return Promise.resolve(res);\n      }\n    }\n    catch (e) {\n      return <any>Promise.reject(e);\n    }\n\n    let result = this._getWithoutInterceptor({ uri, params });\n    return super.responseGet(uri, result);\n  }\n\n  private _getWithoutInterceptor({ uri, params }: IGetRequestOption): Promise<HttpResponse> {\n    let options = {\n      url: this.prefix + uri,\n      method: 'GET',\n      qs: params,\n      jar: this.cookieJar\n    };\n\n    return this._httpResponseAdaptor({ requestOptions: options });\n  }\n\n  public post({ uri, data, binary }: IPostRequestOption): Promise<HttpResponse> {\n    try {\n      let res = super.post({ uri, data, binary });\n      if (res !== null) {\n        return Promise.resolve(res);\n      }\n    }\n    catch (e) {\n      return <any>Promise.reject(e);\n    }\n\n    let options: any = {\n      url: this.prefix + uri,\n      method: 'POST',\n      jar: this.cookieJar\n    };\n\n    options[binary ? 'body' : 'form'] = data;\n\n    try {\n      if (binary) {\n        options.headers = {\n          'Content-Type': 'application/octet-stream'\n        };\n      } else {\n        options.headers = {\n          'Content-Type': 'application/json'\n        };\n        options.form = JSON.stringify(data);\n      }\n    }\n    catch (e) {\n      return <any>Promise.reject(e);\n    }\n\n    let result = this._httpResponseAdaptor({ requestOptions: options });\n    return super.responsePost(uri, result);\n  }\n\n  private _httpResponseAdaptor({ requestOptions }: any): Promise<HttpResponse> {\n    return new Promise((resolve, reject) => {\n      this.request(requestOptions, (error: any, response: any, body: string) => {\n        if (error || response.statusCode >= 400) {\n          reject(error || { statusMessage: response.statusMessage, body: body });\n        }\n        else {\n          resolve(new HttpResponse({\n            statusCode: response.statusCode,\n            headers: [],\n            body\n          }));\n        }\n      });\n    });\n  }\n}\n\nexport default NodeHttpClient;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/data-access/http/node-http-client.ts","module.exports = require(\"request\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"request\"\n// module id = 34\n// module chunks = 0","import HttpResponse from './http-response';\n\nexport interface IRequestOption {\n  uri: string;\n}\n\nexport interface IGetRequestOption extends IRequestOption {\n  params?: any;\n}\n\nexport interface IPostRequestOption extends IRequestOption {\n  data?: any;\n  binary?: boolean;\n}\n\nexport type RequestInterceptor<T extends IRequestOption> = (options: T) => any;\nexport type ResponseInterceptor = (requestUri: string, promise: Promise<HttpResponse>) => Promise<HttpResponse>;\n\nexport abstract class HttpClient {\n\n  public prefix: string;\n\n  private _getRequestInterceptors: RequestInterceptor<IGetRequestOption>[];\n  private _postRequestInterceptors: RequestInterceptor<IPostRequestOption>[];\n  private _getResponseInterceptors: ResponseInterceptor[];\n  private _postResponseInterceptors: ResponseInterceptor[];\n\n  constructor({apiPrefix}: {apiPrefix: string}) {\n    this.prefix = apiPrefix;\n\n    this._getRequestInterceptors = [];\n    this._postRequestInterceptors = [];\n    this._getResponseInterceptors = [];\n    this._postResponseInterceptors = [];\n  }\n\n  public get(options: IGetRequestOption): Promise<HttpResponse> {\n    for (let i = 0; i < this._getRequestInterceptors.length; i++) {\n      let interceptor = this._getRequestInterceptors[i];\n      let res = interceptor(options);\n\n      if (res !== null && (typeof res !== 'undefined')) {\n        return res;\n      }\n    }\n\n    return null;\n  }\n\n  public post(options: IPostRequestOption): Promise<HttpResponse> {\n    for (let i = 0; i < this._postRequestInterceptors.length; i++) {\n      let interceptor = this._postRequestInterceptors[i];\n      let res = interceptor(options);\n\n      if (res !== null && (typeof res !== 'undefined')) {\n        return res;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * @return {Promise} Returns either the underlying HTTP request result, or the promise returned by the interceptor if any\n   */\n  protected responseGet(requestUri: string, promise: Promise<HttpResponse>): Promise<HttpResponse> {\n    //Execute response interceptors\n\n    for (let interceptor of this._getResponseInterceptors) {\n      let res = interceptor(requestUri, promise);\n\n      if (res) {\n        return res;\n      }\n    }\n\n    return promise;\n  }\n\n  /**\n   * @return {Promise} Returns either the underlying HTTP request result, or the promise returned by the interceptor if any\n   */\n  protected responsePost(requestUri: string, promise: Promise<HttpResponse>): Promise<HttpResponse> {\n    //Execute response interceptors\n    for (let interceptor of this._postResponseInterceptors) {\n      let res = interceptor(requestUri, promise);\n\n      if (res) {\n        return res;\n      }\n    }\n\n    return promise;\n  }\n\n  /**\n   * @param {array|string} type - HTTP verb of the request to intercept\n   * @param {function} callback - The interceptor function to execute before HTTP request. If it returns something different than null, the underlying HTTP request won't be executed\n   * @returns {null|object} Returns null or an object, if an object is returned, the underlying HTTP request won't be executed\n   */\n  public registerRequestInterceptor(type: string|string[], callback: RequestInterceptor<IRequestOption>) {\n\n    let interceptorType = this._interceptorTypeToArray(type);\n\n    interceptorType.forEach(t => {\n      if (t === 'get') {\n        this._getRequestInterceptors.push(callback);\n      }\n      else if (t === 'post') {\n        this._postRequestInterceptors.push(callback);\n      }\n    });\n  }\n\n  public registerResponseInterceptor(type: string|string[], callback: ResponseInterceptor) {\n\n    let interceptorType = this._interceptorTypeToArray(type);\n\n    interceptorType.forEach(t => {\n      if (t === 'get') {\n        this._getResponseInterceptors.push(callback);\n      }\n      else if (t === 'post') {\n        this._postResponseInterceptors.push(callback);\n      }\n    });\n  }\n\n  private _interceptorTypeToArray(type: string|string[]): string[] {\n    let interceptorType: string[] = [];\n\n    if (typeof type === 'string') {\n      if (!this._isValidInterceptorType(type.toLowerCase())) {\n        throw new Error('HttpClient.registerInterceptor: invalid interceptor type');\n      }\n      else {\n        interceptorType.push(type.toLowerCase());\n      }\n    }\n    else if (Array.isArray(type)) {\n      type.forEach(t => {\n        if (!this._isValidInterceptorType(t.toLowerCase())) {\n          throw new Error('HttpClient.registerInterceptor: invalid interceptor type');\n        }\n        else {\n          interceptorType.push(t.toLowerCase());\n        }\n      });\n    }\n    else {\n      throw new Error('HttpClient.registerInterceptor: type must be a string or an array');\n    }\n\n    return interceptorType;\n  }\n\n  private _isValidInterceptorType(type: string): boolean {\n    let validTypes = ['get', 'post'];\n\n    return validTypes.indexOf(type) !== -1;\n  }\n}\n\nexport default HttpClient;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/data-access/http/http-client.ts","class HttpResponse {\n\n  public statusCode: number;\n  public headers: any[];\n  public body: string;\n\n  constructor({statusCode, headers, body}:\n    {statusCode: number, headers: any[], body: string}) {\n    this.statusCode = statusCode;\n    this.headers = headers || [];\n    this.body = body;\n  }\n}\n\nexport default HttpResponse;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/data-access/http/http-response.ts"],"sourceRoot":""}